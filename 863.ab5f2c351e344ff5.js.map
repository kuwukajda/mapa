{"version":3,"file":"863.ab5f2c351e344ff5.js","mappings":"2YAAAA,cAA+BA,0BAAcA,+BAqBvCA,qBACEA,8BACFA,eADEA,4FAsDRA,sBC3DaC,EAAiB,MAAjBA,EAQDC,YACAC,eACAC,aACAC,OACAC,cACAC,kBACAC,OAbHC,WACAC,eACAC,OAAmB,GACnBC,aACAC,UAEPC,YACUZ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GANAO,mBACAA,sBACAA,oBACAA,cACAA,qBACAA,yBACAA,cAERA,KAAKN,WAAaM,KAAKR,kBAAkBE,WAAWO,QAAKC,KAAeF,OACxEA,KAAKN,WAAWS,UAAU,CACxBC,KAAON,IACLE,KAAKF,UAAYA,KAGrBE,KAAKH,aAAeG,KAAKb,YAAYkB,MAAM,CACzCC,MAAO,CAAC,GAAI,CAACC,gBACbC,YAAa,CAAC,GAAI,IAClBC,OAAQ,CAAC,GAAI,IACbC,QAAS,EAAC,EAAO,KAEpB,CAEDC,WACEX,KAAKY,UACN,CAEDC,YAAYC,GACVd,KAAKL,eAAeC,OAASI,KAAKL,eAAeC,OAAOmB,OAAQC,GAAUA,EAAMF,KAAOA,EACxF,CAEDG,WAAWC,GACTlB,KAAKV,OAAO6B,OACZnB,KAAKX,aAAa4B,WAAWC,EAAOE,MAAMjB,UAAWkB,IACnDrB,KAAKL,eAAeC,OAAO0B,KAAK,CAC9BR,GAAIO,EAASE,OAAOT,GACpBU,kBAAmBH,EAASE,OAAOC,oBAErCxB,KAAKJ,OAASI,KAAKL,eAAeC,OAAO6B,IAAKT,GAAUA,EAAMQ,mBAC9DxB,KAAKV,OAAOoC,MAAZ,EAEH,CAEDC,OACE3B,KAAKV,OAAO6B,OACZ,MAAMS,EAAoCC,OAAOC,OAAO,GAAI9B,KAAKH,aAAakC,MAAO,CACnFnC,OAAQI,KAAKL,eAAeC,SAE9BI,KAAKT,cAAcyC,OAAO,OAAQ,CAAEJ,aAAYzB,UAAW8B,IACzDjC,KAAKZ,eAAe8C,8BAA8BD,EAAIL,UACtD5B,KAAKL,eAAiBK,KAAKZ,eAAe+C,wBAAwBP,SAClE5B,KAAKV,OAAOoC,MAAZ,EAEH,CAEMU,aAAaC,GAClBrC,KAAKL,eAAeC,OAAO0C,OAAOD,EAAO,GACzCrC,KAAKJ,OAASI,KAAKL,eAAeC,OAAO6B,IAAKT,GAAUA,EAAMQ,kBAC/D,CAEMe,SACJvC,KAAKF,UAAiDE,KAAKY,WAA1CZ,KAAKP,OAAO+C,SAAS,CAAC,YACzC,CAEO5B,WACNZ,KAAKL,eAAiBK,KAAKZ,eAAe+C,wBAAwBP,SAClE5B,KAAKJ,OAASI,KAAKL,eAAeC,OAAO6B,IAAKT,GAAUA,EAAMQ,mBAE9DxB,KAAKH,aAAa4C,WAAW,CAC3BnC,MAAON,KAAKL,eAAeW,MAC3BE,YAAaR,KAAKL,eAAea,YACjCC,OAAQT,KAAKL,eAAec,OAC5BC,QAASV,KAAKL,eAAee,SAEhC,4CAjFUxB,GAAiBD,gHAAjBC,EAAiBwD,86BDjB9BzD,uCAEAA,kBAAiCA,mCAAY0D,QAAM,GACjD1D,iBAAmC,UAAnCA,CAAmC,wBAG7BA,8BACFA,YAIJA,iBAAsB,eACTA,gCAAiDA,QAC5DA,6BACEA,0CAOAA,8BAGFA,UAGFA,kBAAsB,gBACTA,gCAAuDA,QAClEA,6BACEA,6CASFA,UAGFA,kBAAsB,gBACTA,gCAAkDA,QAC7DA,gCAGEA,sCAAc0D,eAAkB,EAAhC1D,CAAiC,4BACvB0D,iBAAoB,GAEhC1D,UAGFA,kBAAsB,gBACTA,gCAAkDA,QAC7DA,6BACEA,2CAMAA,qBACEA,gCACAA,iBAA6CA,uBAAUA,QACvDA,sDAEAA,iBAA2DA,gCAEzDA,QACFA,gCACFA,cAKNA,2CACAA,mBAA6D,6BAIzDA,sCAAe0D,UAAQ,GAGvB1D,gCACFA,QACAA,mCAAqBA,sCAAe0D,QAAM,GACxC1D,gCACFA,sBAxFGA,uCAECA,2CAG4CA,gDAC1CA,8DAMOA,6DAIPA,iFAGAA,yBAEUA,4EAOHA,mEAQPA,uFALAA,+BAYOA,8DAETA,8BAAiB,qBASRA,8DAKPA,kFAFAA,0BAMAA,wEAEAA,8HAE2DA,2DAG3DA,kEAM2BA,kDAM/BA,uCAEAA,kDAE0CA,qCAC1CA,oTCtESC,KAAiB0D,UAN7BC,QAAY,EAMiBD,2BAQLE,KACGC,KACFC,KACNC,IACOC,IACIC,IACXC,QAdPlE,GCZb,MAAMmE,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAWrE,IAMzC,MAAOsE,+CAAqB,+BAArBA,qCAHDC,cAAsBJ,GACtBI,kCCoBN,MAAOC,+CAAc,+BAAdA,qCAZTC,KACAH,EACAI,iBACAC,KACAC,KACAC,KACAC,KACAC,IACAC,KACAC,OAGuB","names":["i0","DonationComponent","formBuilder","sessionService","mediaService","loader","configService","breakpointService","router","isDesktop$","donationConfig","images","donationForm","isDesktop","constructor","this","pipe","untilDestroyed","subscribe","next","group","title","Validators","description","wallet","enabled","ngOnInit","initForm","deleteImage","id","filter","image","uploadFile","$event","show","file","response","push","result","original_file_url","map","hide","save","donation","Object","assign","value","update","res","setSiteDonationConfigurations","getSiteConfigurations","imageDeleted","event","splice","cancel","navigate","patchValue","selectors","ctx","tslib_es6","UntilDestroy","FormBuilder","SessionService","MediaService","LoaderService","ConfigService","BreakpointService","Router","routes","path","component","DonationRoutingModule","RouterModule","DonationModule","CommonModule","SettingsModule","MatSlideToggleModule","ReactiveFormsModule","DirectiveModule","TranslateModule","MatInputModule","MatButtonModule","MzimaUiModule"],"sourceRoot":"webpack:///","sources":["./apps/web-mzima-client/src/app/settings/donation/donation.component.html","./apps/web-mzima-client/src/app/settings/donation/donation.component.ts","./apps/web-mzima-client/src/app/settings/donation/donation-routing.module.ts","./apps/web-mzima-client/src/app/settings/donation/donation.module.ts"],"sourcesContent":["<h1 *ngIf=\"isDesktop$ | async\">Setup Donation</h1>\n\n<form [formGroup]=\"donationForm\" (ngSubmit)=\"save()\" novalidate>\n  <div class=\"form-row toggle-group\">\n    <div class=\"toggle\">\n      <mat-slide-toggle formControlName=\"enabled\" [data-qa]=\"'monetization-toggle'\">\n        {{ 'app.enable_monetization' | translate }}\n      </mat-slide-toggle>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <mat-label>{{ 'settings.donation.title.label' | translate }}</mat-label>\n    <mat-form-field appearance=\"outline\">\n      <input\n        matInput\n        placeholder=\"{{ 'settings.donation.title.placeholder' | translate }}\"\n        formControlName=\"title\"\n        required\n        [data-qa]=\"'title'\"\n      />\n      <mat-error *ngIf=\"donationForm.get('title')?.invalid\">\n        {{ 'settings.donation.title.required' | translate }}\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"form-row\">\n    <mat-label>{{ 'settings.donation.description.label' | translate }}</mat-label>\n    <mat-form-field appearance=\"outline\">\n      <textarea\n        [data-qa]=\"'description'\"\n        matInput\n        cdkTextareaAutosize\n        cdkAutosizeMinRows=\"4\"\n        cdkAutosizeMaxRows=\"8\"\n        placeholder=\"{{ 'settings.donation.description.placeholder' | translate }}\"\n        formControlName=\"description\"\n      ></textarea>\n    </mat-form-field>\n  </div>\n\n  <div class=\"form-row\">\n    <mat-label>{{ 'settings.donation.images.label' | translate }}</mat-label>\n    <app-file-uploader\n      [multiple]=\"true\"\n      [imageSrc]=\"images\"\n      (fileUpload)=\"uploadFile($event)\"\n      (delete)=\"imageDeleted($event)\"\n    >\n    </app-file-uploader>\n  </div>\n\n  <div class=\"form-row\">\n    <mat-label>{{ 'settings.donation.wallet.label' | translate }}</mat-label>\n    <mat-form-field appearance=\"outline\">\n      <input\n        [data-qa]=\"'wallet'\"\n        matInput\n        placeholder=\"{{ 'settings.donation.wallet.placeholder' | translate }}\"\n        formControlName=\"wallet\"\n      />\n      <mat-hint>\n        {{ 'settings.donation.info.start_one' | translate }}\n        <a target=\"_blank\" href=\"https://uphold.com\">uphold.com</a>\n        {{ 'settings.donation.info.start_two' | translate }}\n        {{ 'settings.donation.info.start_three' | translate }}\n        <a target=\"_blank\" href=\"https://wallet.uphold.com/signup\">{{\n          'settings.donation.info.here' | translate\n        }}</a>\n        {{ 'settings.donation.info.end' | translate }}\n      </mat-hint>\n    </mat-form-field>\n  </div>\n</form>\n\n<div class=\"form-controls-spacer\" *ngIf=\"!(isDesktop$ | async)!\"></div>\n<div class=\"form-controls-panel form-controls-panel--sticky\">\n  <mzima-client-button\n    fill=\"outline\"\n    color=\"secondary\"\n    (buttonClick)=\"cancel()\"\n    [data-qa]=\"'btn-cancel'\"\n  >\n    {{ 'app.cancel' | translate }}\n  </mzima-client-button>\n  <mzima-client-button (buttonClick)=\"save()\" [data-qa]=\"'btn-save'\">\n    {{ 'app.save' | translate }}\n  </mzima-client-button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DonationConfigInterface, SiteConfigInterface } from '@models';\nimport { MediaService } from '@mzima-client/sdk';\nimport { LoaderService } from '../../core/services/loader.service';\nimport { ConfigService } from '../../core/services/config.service';\nimport { Observable } from 'rxjs';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { SessionService, BreakpointService } from '@services';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-donation',\n  templateUrl: './donation.component.html',\n  styleUrls: ['./donation.component.scss'],\n})\nexport class DonationComponent implements OnInit {\n  public isDesktop$: Observable<boolean>;\n  public donationConfig: DonationConfigInterface;\n  public images: string[] = [];\n  public donationForm: FormGroup;\n  public isDesktop: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private sessionService: SessionService,\n    private mediaService: MediaService,\n    private loader: LoaderService,\n    private configService: ConfigService,\n    private breakpointService: BreakpointService,\n    private router: Router,\n  ) {\n    this.isDesktop$ = this.breakpointService.isDesktop$.pipe(untilDestroyed(this));\n    this.isDesktop$.subscribe({\n      next: (isDesktop) => {\n        this.isDesktop = isDesktop;\n      },\n    });\n    this.donationForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      description: ['', []],\n      wallet: ['', []],\n      enabled: [false, []],\n    });\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  deleteImage(id: number) {\n    this.donationConfig.images = this.donationConfig.images.filter((image) => image.id !== id);\n  }\n\n  uploadFile($event: any) {\n    this.loader.show();\n    this.mediaService.uploadFile($event.file).subscribe((response: any) => {\n      this.donationConfig.images.push({\n        id: response.result.id,\n        original_file_url: response.result.original_file_url,\n      });\n      this.images = this.donationConfig.images.map((image) => image.original_file_url);\n      this.loader.hide();\n    });\n  }\n\n  save() {\n    this.loader.show();\n    const donation: DonationConfigInterface = Object.assign({}, this.donationForm.value, {\n      images: this.donationConfig.images,\n    });\n    this.configService.update('site', { donation }).subscribe((res: SiteConfigInterface) => {\n      this.sessionService.setSiteDonationConfigurations(res.donation!);\n      this.donationConfig = this.sessionService.getSiteConfigurations().donation!;\n      this.loader.hide();\n    });\n  }\n\n  public imageDeleted(event: any): void {\n    this.donationConfig.images.splice(event, 1);\n    this.images = this.donationConfig.images.map((image) => image.original_file_url);\n  }\n\n  public cancel(): void {\n    !this.isDesktop ? this.router.navigate(['settings']) : this.initForm();\n  }\n\n  private initForm(): void {\n    this.donationConfig = this.sessionService.getSiteConfigurations().donation!;\n    this.images = this.donationConfig.images.map((image) => image.original_file_url);\n\n    this.donationForm.patchValue({\n      title: this.donationConfig.title,\n      description: this.donationConfig.description,\n      wallet: this.donationConfig.wallet,\n      enabled: this.donationConfig.enabled,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DonationComponent } from './donation.component';\n\nconst routes: Routes = [{ path: '', component: DonationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DonationRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DirectiveModule } from '@shared';\n\nimport { DonationRoutingModule } from './donation-routing.module';\nimport { DonationComponent } from './donation.component';\nimport { SettingsModule } from '../settings.module';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MzimaUiModule } from '@mzima-client/mzima-ui';\n\n@NgModule({\n  declarations: [DonationComponent],\n  imports: [\n    CommonModule,\n    DonationRoutingModule,\n    SettingsModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    DirectiveModule,\n    TranslateModule,\n    MatInputModule,\n    MatButtonModule,\n    MzimaUiModule,\n  ],\n})\nexport class DonationModule {}\n"],"x_google_ignoreList":[]}