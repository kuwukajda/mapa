{"version":3,"file":"84.21a910976af8a864.js","mappings":"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","names":["i0","PostDetailsModalComponent","data","matDialogRef","post","color","editable","urlEnd","constructor","this","handleEditPost","cancel","close","updated","update","statusChangedHandle","statusChanged","postIs","available","notfound","notAllowed","MAT_DIALOG_DATA","selectors","PostPreviewComponent","mediaService","user","feedView","selectable","isChecked","selected","EventEmitter","edit","refresh","deleted","mediaLoaded","media","details","Subject","details$","asObservable","onDeleted","deleted$","allowed_privileges","ngOnInit","ngOnChanges","changes","mediaField","post_content","flatMap","fields","filter","field","type","value","id","getById","subscribe","next","result","emit","showDetails","postClicked","event","stopPropagation","deletedHandle"],"sourceRoot":"webpack:///","sources":["./apps/web-mzima-client/src/app/map/post-details-modal/post-details-modal.component.html","./apps/web-mzima-client/src/app/map/post-details-modal/post-details-modal.component.ts","./apps/web-mzima-client/src/app/post/post-preview/post-preview.component.html","./apps/web-mzima-client/src/app/post/post-preview/post-preview.component.ts"],"sourcesContent":["<mzima-client-button\n  tabindex=\"-1\"\n  fill=\"outline\"\n  [iconOnly]=\"true\"\n  color=\"light-gray\"\n  [data-qa]=\"'btn-close'\"\n  class=\"modal__close-btn\"\n  [mat-dialog-close]=\"false\"\n  ariaLabel=\"{{ 'modal.button.close' | translate }}\"\n>\n  <mat-icon icon svgIcon=\"close\"></mat-icon>\n</mzima-client-button>\n\n<mat-dialog-content class=\"post\">\n  <ng-container *ngIf=\"postIs.available()\">\n    <app-post-details\n      [post]=\"post\"\n      [feedView]=\"false\"\n      [color]=\"color\"\n      (edit)=\"handleEditPost()\"\n      *ngIf=\"!editable; else editPost\"\n      (statusChanged)=\"statusChangedHandle()\"\n    >\n    </app-post-details>\n  </ng-container>\n  <!-- If modal is no longer employed in data/feed view, this can be removed -->\n  <app-post-not-found *ngIf=\"postIs.notfound()\"></app-post-not-found>\n  <app-post-not-allowed *ngIf=\"postIs.notAllowed()\"></app-post-not-allowed>\n  <!---->\n</mat-dialog-content>\n\n<ng-template #editPost>\n  <app-post-edit [modalView]=\"true\" [postInput]=\"post\" (cancel)=\"cancel()\" (updated)=\"updated()\">\n  </app-post-edit>\n</ng-template>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-post-details-modal',\n  templateUrl: './post-details-modal.component.html',\n  styleUrls: ['./post-details-modal.component.scss'],\n})\nexport class PostDetailsModalComponent {\n  public post: any;\n  public color: string;\n  public editable: boolean;\n  public urlEnd: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private matDialogRef: MatDialogRef<PostDetailsModalComponent>,\n  ) {\n    this.post = data?.post;\n    this.color = data?.color;\n    this.editable = data?.editable;\n    this.urlEnd = data?.urlEnd;\n  }\n\n  public handleEditPost(): void {\n    this.editable = !this.editable;\n  }\n\n  public cancel(): void {\n    this.editable = false;\n    this.matDialogRef.close();\n  }\n\n  public updated(): void {\n    this.editable = false;\n    this.matDialogRef.close({\n      update: true,\n    });\n  }\n\n  public statusChangedHandle(): void {\n    this.matDialogRef.close({\n      statusChanged: true,\n    });\n  }\n\n  /* --------------------------------------------\n    If modal is no longer employed in data/feed\n    view, the postIs obj can be removed/discarded\n  ----------------------------------------------*/\n  public postIs = {\n    available: () => {\n      return !this.urlEnd || !this.postIs.notfound() || !this.postIs.notAllowed();\n    },\n    notfound: () => {\n      return this.urlEnd === 'not-found';\n    },\n    notAllowed: () => {\n      return this.urlEnd === 'not-allowed';\n    },\n  };\n}\n","<div\n  class=\"post\"\n  *ngIf=\"post\"\n  (click)=\"postClicked($event)\"\n  [ngStyle]=\"{ '--color': post.color || 'var(--color-neutral-100)' }\"\n  [ngClass]=\"{\n    'post--feed': feedView,\n    'post--selectable': selectable\n  }\"\n>\n  <div class=\"post__head\">\n    <ng-container *ngIf=\"selectable\">\n      <mat-checkbox [(ngModel)]=\"isChecked\"></mat-checkbox>\n    </ng-container>\n    <app-post-head\n      [post]=\"post\"\n      [feedView]=\"!!feedView\"\n      (refresh)=\"refresh.emit()\"\n      (edit)=\"edit.emit()\"\n      [editable]=\"post.allowed_privileges.includes('update')\"\n      [deleteable]=\"post.allowed_privileges.includes('delete')\"\n      (deleted)=\"deletedHandle()\"\n      (statusChanged)=\"statusChangedHandle()\"\n    >\n    </app-post-head>\n  </div>\n\n  <div class=\"post__twitter\" *ngIf=\"post.source === 'Twitter' && post.data_source_message_id\">\n    <app-twitter-widget [id]=\"post.data_source_message_id\"></app-twitter-widget>\n  </div>\n\n  <div class=\"post__main\">\n    <div class=\"post__content\">\n      <h3 *ngIf=\"post.title?.length || post.content?.length\">{{ post.title || post.content }}</h3>\n      <p *ngIf=\"post.title?.length && post.content?.length\">{{ post.content }}</p>\n    </div>\n    <div class=\"post__visual\" *ngIf=\"media && post.source !== 'Twitter'\">\n      <img [src]=\"media.original_file_url\" [alt]=\"media.caption || post.title\" />\n    </div>\n  </div>\n  <div class=\"post__more\" *ngIf=\"!feedView\">\n    <mzima-client-button size=\"small\" fill=\"clear\" [expand]=\"false\" (buttonClick)=\"showDetails()\">\n      {{ 'post.read_more' | translate }}\n    </mzima-client-button>\n  </div>\n\n  <app-post-metadata class=\"post__metadata\" [post]=\"post\"></app-post-metadata>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { MediaService, PostResult, UserInterface } from '@mzima-client/sdk';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-post-preview',\n  templateUrl: './post-preview.component.html',\n  styleUrls: ['./post-preview.component.scss'],\n})\nexport class PostPreviewComponent implements OnInit, OnChanges {\n  @Input() public post: PostResult;\n  @Input() public user: UserInterface;\n  @Input() public feedView?: boolean;\n  @Input() public selectable?: boolean;\n  @Input() public isChecked?: boolean;\n  @Output() selected = new EventEmitter();\n  @Output() edit = new EventEmitter();\n  @Output() refresh = new EventEmitter();\n  @Output() deleted = new EventEmitter();\n  @Output() statusChanged = new EventEmitter();\n  @Output() mediaLoaded = new EventEmitter();\n  public media?: any;\n  private details = new Subject<boolean>();\n  public details$ = this.details.asObservable();\n  private onDeleted = new Subject<PostResult>();\n  public deleted$ = this.onDeleted.asObservable();\n  public allowed_privileges: string | string[];\n\n  constructor(private mediaService: MediaService) {}\n\n  ngOnInit() {\n    this.allowed_privileges = this.post?.allowed_privileges ?? '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['post']) {\n      this.allowed_privileges = this.post?.allowed_privileges ?? '';\n      const mediaField = this.post.post_content?.flatMap((post_content) => {\n        return post_content.fields.filter((field) => {\n          return field.type === 'media' && field.value?.id;\n        });\n      })[0];\n      if (mediaField?.value?.id) {\n        this.mediaService.getById(mediaField.value.value).subscribe({\n          next: (media) => {\n            this.media = media.result;\n            this.mediaLoaded.emit();\n          },\n        });\n      }\n    }\n  }\n\n  public showDetails(): void {\n    this.details.next(true);\n  }\n\n  public postClicked(event: MouseEvent): void {\n    if (this.selectable) {\n      event.stopPropagation();\n      this.isChecked = !this.isChecked;\n      this.selected.emit(this.isChecked);\n    }\n  }\n\n  public deletedHandle(): void {\n    if (this.feedView) {\n      this.deleted.emit();\n    } else {\n      this.onDeleted.next(this.post);\n    }\n  }\n\n  public statusChangedHandle(): void {\n    this.statusChanged.emit();\n  }\n}\n"],"x_google_ignoreList":[]}