{"version":3,"file":"31.6155588b59308f6a.js","mappings":"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","names":["i0","SettingsComponent","session","userRole","permissions","isAdmin","isManageUsers","isManageSettings","isManageImportExport","settingsItems","isDonateAvailable","constructor","ngOnInit","this","Roles","includes","Permissions","getSiteConfigurations","donation","enabled","initMenu","title","description","icon","router","visible","selectors","SettingsLayoutComponent","BaseComponent","sessionService","breakpointService","eventBusService","isInnerPage","super","getUserData","checkDesktop","checkIsInnerPage","isDesktop","navigateToInnerPage","events","pipe","filter","event","NavigationEnd","subscribe","next","loadData","user","role","navigate","url","split","length","type","payload","inner","routes","path","component","children","loadChildren","__webpack_require__","then","m","GeneralModule","canActivate","CombinedGuard","data","breadcrumb","guards","AdminGuard","ManageSettingsGuard","Promise","SurveysModule","DataSourcesModule","DataImportModule","DataImportExportGuard","DonationModule","UserSettingsModule","ManageUsersGuard","DataExportModule","UsersModule","RolesModule","CategoriesModule","WebhooksModule","SettingsRoutingModule","RouterModule","SettingsModule","CommonModule","MatButtonModule","MatIconModule","MatDialogModule","TranslateModule","DirectiveModule","MatRippleModule","MzimaUiModule","FileUploaderComponent","common"],"sourceRoot":"webpack:///","sources":["./apps/web-mzima-client/src/app/settings/settings/settings.component.html","./apps/web-mzima-client/src/app/settings/settings/settings.component.ts","./apps/web-mzima-client/src/app/settings/settings-layout.component.html","./apps/web-mzima-client/src/app/settings/settings-layout.component.ts","./apps/web-mzima-client/src/app/settings/settings-routing.module.ts","./apps/web-mzima-client/src/app/settings/settings.module.ts"],"sourcesContent":["<div class=\"settings\">\n  <ng-container *ngFor=\"let item of settingsItems\">\n    <a\n      matRipple\n      [routerLink]=\"item.router\"\n      class=\"single-menu\"\n      [routerLinkActive]=\"'single-menu-active'\"\n      [data-qa]=\"'btn-' + item.router\"\n      *ngIf=\"item.visible\"\n    >\n      <div class=\"single-menu__header\">\n        <mat-icon class=\"single-menu__header__icon\" svgIcon=\"{{ item.icon }}\"></mat-icon>\n        <h3 class=\"single-menu__title\">{{ item.title | translate }}</h3>\n      </div>\n      <div class=\"single-menu__info\">\n        <p>{{ item.description | translate }}</p>\n      </div>\n    </a>\n  </ng-container>\n</div>\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SessionService } from '@services';\nimport { Roles, Permissions } from '@enums';\n\ninterface SettingsItem {\n  title: string;\n  description: string;\n  icon: string;\n  router: string;\n  visible: boolean;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SettingsComponent implements OnInit {\n  @Input() userRole: string;\n  @Input() permissions: any;\n  isAdmin = false;\n  isManageUsers = false;\n  isManageSettings = false;\n  isManageImportExport = false;\n  public settingsItems: SettingsItem[] = [];\n  public isDonateAvailable = false;\n\n  constructor(private session: SessionService) {}\n\n  ngOnInit() {\n    this.isAdmin = this.userRole === Roles.Admin;\n    this.isManageUsers = this.permissions.includes(Permissions.ManageUsers);\n    this.isManageSettings = this.permissions.includes(Permissions.ManageSettings);\n    this.isManageImportExport = this.permissions.includes(Permissions.ImportExport);\n    this.isDonateAvailable = <boolean>this.session.getSiteConfigurations().donation?.enabled;\n    this.initMenu();\n  }\n\n  initMenu() {\n    this.settingsItems = [\n      {\n        title: 'settings.settings_list.general',\n        description: 'settings.settings_list.general_desc',\n        icon: 'general',\n        router: 'general',\n        visible: this.isAdmin || this.isManageSettings,\n      },\n      {\n        title: 'settings.settings_list.surveys',\n        description: 'settings.settings_list.surveys_desc',\n        icon: 'surveys',\n        router: 'surveys',\n        visible: this.isAdmin || this.isManageSettings,\n      },\n      {\n        title: 'settings.settings_list.data_sources',\n        description: 'settings.settings_list.data_sources_desc',\n        icon: 'data-source',\n        router: 'data-sources',\n        visible: this.isAdmin || this.isManageSettings,\n      },\n      {\n        title: 'settings.settings_list.import',\n        description: 'settings.settings_list.import_desc',\n        icon: 'import',\n        router: 'data-import',\n        visible: this.isAdmin || this.isManageImportExport,\n      },\n      {\n        title: 'settings.settings_list.donation',\n        description: 'settings.settings_list.donation_desc',\n        icon: 'donate',\n        router: 'donation',\n        visible:\n          (this.isAdmin && this.isDonateAvailable) ||\n          (this.isManageSettings && this.isDonateAvailable),\n      },\n      {\n        title: 'settings.settings_list.user_settings',\n        description: 'settings.settings_list.user_settings_desc',\n        icon: 'configure',\n        router: 'user-settings',\n        visible:\n          this.isAdmin || this.isManageUsers || this.isManageSettings || this.isManageImportExport,\n      },\n      {\n        title: 'settings.settings_list.export_hxl',\n        description: 'settings.settings_list.export_desc_hxl',\n        icon: 'export',\n        router: 'data-export',\n        visible: this.isAdmin || this.isManageImportExport,\n      },\n      {\n        title: 'settings.settings_list.users',\n        description: 'settings.settings_list.users_desc',\n        icon: 'users',\n        router: 'users',\n        visible: this.isAdmin || this.isManageUsers,\n      },\n      {\n        title: 'settings.settings_list.roles',\n        description: 'settings.settings_list.roles_desc',\n        icon: 'roles',\n        router: 'roles',\n        visible: this.isAdmin,\n      },\n      {\n        title: 'settings.settings_list.categories',\n        description: 'settings.settings_list.categories_desc',\n        icon: 'categories',\n        router: 'categories',\n        visible: this.isAdmin || this.isManageSettings,\n      },\n      {\n        title: 'settings.settings_list.webhooks',\n        description: 'settings.settings_list.webhooks_desc',\n        icon: 'webhook',\n        router: 'webhooks',\n        visible: this.isAdmin || this.isManageSettings,\n      },\n    ];\n  }\n}\n","<div class=\"settings-layout\">\n  <app-settings\n    class=\"settings-menu\"\n    *ngIf=\"isDesktop || !isInnerPage\"\n    [userRole]=\"user.role!\"\n    [permissions]=\"user.permissions!\"\n  ></app-settings>\n  <div class=\"settings-router\" *ngIf=\"isDesktop || isInnerPage\">\n    <div [ngClass]=\"{ 'page-content': isDesktop }\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Roles } from '@enums';\nimport { BreakpointService, EventBusService, EventType } from '@services';\nimport { filter } from 'rxjs';\nimport { BaseComponent } from '../base.component';\nimport { SessionService } from '../core/services/session.service';\n\n@Component({\n  selector: 'app-settings-layout',\n  templateUrl: './settings-layout.component.html',\n  styleUrls: ['./settings-layout.component.scss'],\n})\nexport class SettingsLayoutComponent extends BaseComponent {\n  public isInnerPage = false;\n\n  constructor(\n    protected override sessionService: SessionService,\n    protected override breakpointService: BreakpointService,\n    private router: Router,\n    private eventBusService: EventBusService,\n  ) {\n    super(sessionService, breakpointService);\n    this.getUserData();\n    this.checkDesktop();\n\n    this.checkIsInnerPage();\n\n    if (this.isDesktop && !this.isInnerPage) {\n      this.navigateToInnerPage();\n    }\n\n    this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe({\n      next: () => {\n        this.checkIsInnerPage();\n      },\n    });\n  }\n\n  loadData(): void {}\n\n  private navigateToInnerPage(): void {\n    switch (this.user.role) {\n      case Roles.Admin:\n      case Roles.ManageSettings:\n        this.router.navigate(['settings/general']);\n        break;\n      case Roles.ManageUsers:\n        this.router.navigate(['settings/user-settings']);\n        break;\n      case Roles.ManageImportExport:\n        this.router.navigate(['settings/data-import']);\n        break;\n    }\n  }\n\n  private checkIsInnerPage(): void {\n    this.isInnerPage = this.router.url.split('/').length > 2;\n    this.eventBusService.next({\n      type: EventType.IsSettingsInnerPage,\n      payload: {\n        inner: this.isInnerPage,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  AdminGuard,\n  CombinedGuard,\n  DataImportExportGuard,\n  ManageSettingsGuard,\n  ManageUsersGuard,\n} from '@guards';\nimport { SettingsLayoutComponent } from './settings-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsLayoutComponent,\n    children: [\n      {\n        path: 'general',\n        loadChildren: () => import('./general/general.module').then((m) => m.GeneralModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'General',\n          guards: [AdminGuard, ManageSettingsGuard],\n        },\n      },\n      {\n        path: 'surveys',\n        loadChildren: () => import('./surveys/surveys.module').then((m) => m.SurveysModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Surveys',\n          guards: [AdminGuard, ManageSettingsGuard],\n        },\n      },\n      {\n        path: 'data-sources',\n        loadChildren: () =>\n          import('./data-sources/data-sources.module').then((m) => m.DataSourcesModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Data sources',\n          guards: [AdminGuard, ManageSettingsGuard],\n        },\n      },\n      {\n        path: 'data-import',\n        loadChildren: () =>\n          import('./data-import/data-import.module').then((m) => m.DataImportModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Data import',\n          guards: [AdminGuard, DataImportExportGuard],\n        },\n      },\n      {\n        path: 'donation',\n        loadChildren: () => import('./donation/donation.module').then((m) => m.DonationModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Donation',\n          guards: [AdminGuard, ManageSettingsGuard],\n        },\n      },\n      {\n        path: 'user-settings',\n        loadChildren: () =>\n          import('./user-settings/user-settings.module').then((m) => m.UserSettingsModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Configure HDX API',\n          guards: [AdminGuard, ManageUsersGuard, ManageSettingsGuard, DataImportExportGuard],\n        },\n      },\n      {\n        path: 'data-export',\n        loadChildren: () =>\n          import('./data-export/data-export.module').then((m) => m.DataExportModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Data export',\n          guards: [AdminGuard, DataImportExportGuard],\n        },\n      },\n      {\n        path: 'users',\n        loadChildren: () => import('./users/users.module').then((m) => m.UsersModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Users',\n          guards: [AdminGuard, ManageUsersGuard],\n        },\n      },\n      {\n        path: 'roles',\n        loadChildren: () => import('./roles/roles.module').then((m) => m.RolesModule),\n        canActivate: [CombinedGuard],\n        data: { breadcrumb: 'Roles' },\n      },\n      {\n        path: 'categories',\n        loadChildren: () =>\n          import('./categories/categories.module').then((m) => m.CategoriesModule),\n        canActivate: [CombinedGuard],\n        data: { breadcrumb: 'Categories', guards: [AdminGuard, ManageSettingsGuard] },\n      },\n      {\n        path: 'webhooks',\n        loadChildren: () => import('./webhooks/webhooks.module').then((m) => m.WebhooksModule),\n        canActivate: [CombinedGuard],\n        data: {\n          breadcrumb: 'Webhooks',\n          guards: [AdminGuard, ManageSettingsGuard],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DirectiveModule } from '@shared';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings/settings.component';\nimport { FileUploaderComponent } from './components';\nimport { SettingsLayoutComponent } from './settings-layout.component';\nimport { MzimaUiModule } from '@mzima-client/mzima-ui';\n\n@NgModule({\n  declarations: [SettingsComponent, FileUploaderComponent, SettingsLayoutComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    TranslateModule,\n    DirectiveModule,\n    MatRippleModule,\n    MzimaUiModule,\n  ],\n  exports: [FileUploaderComponent],\n})\nexport class SettingsModule {}\n"],"x_google_ignoreList":[]}