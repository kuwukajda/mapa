{"version":3,"file":"992.581fdc56d4d6eff9.js","mappings":"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","names":["window","factory","define","matchesMethod","ElemProto","Element","prototype","matches","matchesSelector","prefixes","i","length","method","elem","selector","EvEmitter","proto","on","eventName","listener","events","this","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","onceListeners","off","index","splice","emitEvent","args","slice","apply","allOff","call","__webpack_require__","utils","a","b","prop","num","div","arraySlice","Array","makeArray","obj","isArray","removeFrom","ary","getParent","parentNode","document","body","getQueryElement","querySelector","handleEvent","event","type","filterFindElements","elems","ffElems","forEach","HTMLElement","childElems","querySelectorAll","debounceMethod","_class","methodName","threshold","timeoutName","clearTimeout","arguments","_this","setTimeout","docReady","callback","readyState","addEventListener","toDashed","str","replace","match","$1","$2","toLowerCase","console","htmlInit","WidgetClass","namespace","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","concat","dataOptionsAttr","jQuery","options","attr","getAttribute","JSON","parse","error","className","instance","data","getStyleSize","value","parseFloat","isNaN","logError","noop","message","measurements","measurementsLength","getStyle","style","getComputedStyle","isBoxSizeOuter","isSetup","getSize","setup","createElement","width","padding","borderStyle","borderWidth","boxSizing","documentElement","appendChild","Math","round","removeChild","nodeType","display","getZeroSize","size","height","innerWidth","innerHeight","outerWidth","outerHeight","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","Outlayer","Masonry","create","compatOptions","fitWidth","_resetLayout","_getMeasurement","measureColumns","colYs","cols","maxY","horizontalColIndex","getContainerWidth","columnWidth","firstItem","items","firstItemElem","element","containerWidth","gutter","excess","max","isFitWidth","_getOption","_getItemLayoutPosition","item","remainder","colSpan","min","colPosition","horizontalOrder","position","x","col","y","setHeight","setMax","_getTopColPosition","colGroup","_getTopColGroup","minimumY","groupCount","_getColGroupY","groupColYs","_getHorizontalColPosition","_manageStamp","stamp","stampSize","offset","_getElementOffset","firstX","left","right","lastX","firstCol","floor","lastCol","stampMaxY","top","bottom","_getContainerSize","_getContainerFitWidth","unusedCols","needsResizeLayout","previousWidth","docElemStyle","transitionProperty","transition","transformProperty","transform","transitionEndEvent","WebkitTransition","vendorProperties","transitionDuration","transitionDelay","Item","layout","_create","Object","constructor","_transn","ingProperties","clean","onEnd","css","elemStyle","getPosition","isOriginLeft","isOriginTop","xValue","yValue","layoutSize","layoutPosition","xResetProperty","getXValue","yResetProperty","getYValue","isHorizontal","percentPosition","_transitionTo","curX","curY","didNotMove","setPosition","isTransitioning","transitionStyle","getTranslate","to","onTransitionEnd","isCleaning","goTo","moveTo","_nonTransition","_removeStyles","_transition","from","enableTransition","transitionProps","toDashedAll","duration","staggerDelay","onwebkitTransitionEnd","ontransitionend","onotransitionend","dashedVendorProperties","target","propertyName","isEmptyObj","disableTransition","removeTransitionStyles","removeEventListener","cleanStyle","cleanTransitionStyle","stagger","delay","removeElem","remove","hide","reveal","isHidden","getHideRevealTransitionEndProperty","onRevealTransitionEnd","hiddenStyle","visibleStyle","styleProperty","optionStyle","opacity","onHideTransitionEnd","destroy","__WEBPACK_AMD_DEFINE_RESULT__","GUID","instances","queryElement","$element","extend","defaults","option","id","outlayerGUID","containerStyle","initLayout","originLeft","originTop","resize","resizeContainer","subclass","Parent","SubClass","opts","oldOption","undefined","horizontal","layoutInstant","reloadItems","stamps","bindResize","_itemize","children","itemElems","_filterFindItemElements","itemSelector","getItemElements","map","_manageStamps","layoutItems","_isLayoutInited","_init","isInstant","_getItemsForLayout","_layoutItems","_postLayout","filter","isIgnored","_emitCompleteOnItems","queue","isLayoutInstant","_processLayoutQueue","updateStagger","_positionItem","getMilliseconds","time","unit","msUnits","_setContainerMeasure","measure","isWidth","elemSize","onComplete","dispatchEvent","count","doneCount","tick","emitArgs","$event","Event","trigger","ignore","getItem","unignore","_find","unstamp","_getBoundingRect","boundingRect","getBoundingClientRect","_boundingRect","thisRect","isResizeBound","unbindResize","onresize","addItems","appended","prepended","previousItems","revealItemElements","getItems","hideItemElements","removeItems","removeData","Layout","bridget","ms","s","NgxMasonryComponent","platformId","_element","updateLayout","ordered","layoutComplete","EventEmitter","removeComplete","itemsLoaded","pendingItems","ngOnInit","isPlatformBrowser","masonryInstance","nativeElement","emit","ngOnChanges","changes","firstChange","ngOnDestroy","addPendingItem","add","newItem","entries","images","itemLoaded","prepend","playAnimation","ɵfac","i0","PLATFORM_ID","ɵcmp","selectors","attrs","NgxMasonryDirective","builder","parent","renderer","animations","show","animate","setStyle","ngAfterViewInit","getElementsByTagName","Set","imageRef","hasAttribute","imageLoaded","listen","_","image","delete","metadata","build","play","i1","forwardRef","ɵdir","NgxMasonryModule","ɵmod","ɵinj","FeedMode","FeedComponent","MainViewComponent","router","route","postsService","savedSearchesService","eventBusService","sessionService","breakpointService","location","confirmModalService","dialog","translate","languageService","snackBar","_routerEvent","Subscription","feed","masonry","getPostsSubject","Subject","pagination","page","limit","userEvent","idModePages","idModePageFromRouter","routerUrl","string","includes","onlyModeUIChanged","postsSkeleton","fill","posts","postCurrentLength","isLoading","atLeastOnePostExists","noPostsYet","loadingMorePosts","paginationElementsAllowed","mode","Preview","activePostId","total","postDetails","scrollToView","isPostLoading","isFiltersVisible","isBulkOptionsVisible","selectedPosts","statuses","searchFormHelper","sortingOptions","activeSorting","order","orderby","isRTL","masonryOptions","currentPage","itemsPerPage","postDetailsModal","isMainFiltersOpen","isManagePosts","statusControl","FormControl","initialLoad","urlFromRouteTrigger","urlAfterInteractionWithFilters","super","checkDesktop","setupFeedDefaultFilters","params","subscribe","initCollection","queryParams","next","Number","url","Id","activeCard","scrollCountHandler","task","savePageURL","onRouterTriggered","pageURL","createUrlTree","relativeTo","toString","go","getPosts","pipe","NavigationEnd","masonryUpdateOnModeSwitch","slideOutHandler","localStorage","removeItem","setItem","stringify","valueFromPageURL","modal","showOn","idMode","loadHandler","postsFilters$","untilDestroyed","currentPageBeforeInteractingWithFilters","setPageURLonInteractionWithFilters","routerURL","onInteractionWithFilters","isLoadingPosts$","totalPosts$","awaitedResponse$","response","dataMetaPerPage","meta","per_page","current_page","navigateToFirstPostOnPageOneWhenFilteringInIdMode","isFiltersVisible$","isRTL$","resizeHandler","isMainFiltersHidden$","isMainFiltersHidden","unsubscribe","getUserData","checkPermission","eventBusListeners","include_unstructured_posts","currentView","colId","collectionId","navigate","post","refreshPost","editPost","postDeleted","user","permissions","Permissions","loadData","loadMore","results","updateMasonry","idModeScrollCount","parseInt","postVisibility","setProperty","postFromStorage","countPropExists","hasOwnProperty","localStorageCount","startCount","scrollIntoView","showPostDetails","navigateTo","view","clickHandler","collection","usePageUrl","previewMode","useQueryParams","currentPageForFilters","queryParamsHandling","edit","postNotFound","PostNotAllowed","pathFromCurrentRoute","urlHasModeID","urlHasModePREVIEW","firstPostOnCurrentPage","idEndInURL","firstPartOfURL","idInURL","lastIndexOf","navigateByUrl","toggleBulkOptions","state","deselectAllPosts","changePostsStatus","status","PostStatus","uncompletedPosts","postHelpers","showMessage","instant","titles","p","title","join","reset","forkJoin","update","complete","selectAllPosts","find","selectedPost","deleteSelectedPosts","open","description","some","postWord","buttonSuccess","payload","postStatusChanged","isPostSelected","isChecked","findIndex","isPostChecked","sortPosts","setSorting","toggleFilters","toggleFiltersVisibility","switchMode","switchButtonValue","getById","updatedPost","changePage","openModal","forView","forEdit","fetchedPost","allowed_privileges","forPostNotFoundOrNotAllowed","err","close","openDialogs","firstPostFromOpenModalDialog","componentInstance","customModalDialog","configRemainder","config","maxWidth","maxHeight","panelClass","isDesktop","PostDetailsModalComponent","afterClosed","color","twitterId","data_source_message_id","editable","urlEnd","tslib_es6","UntilDestroy","Router","ActivatedRoute","PostsService","SavedsearchesService","EventBusService","SessionService","BreakpointService","Location","ConfirmModalService","MatDialog","TranslateService","LanguageService","MatSnackBar","routes","path","component","redirectTo","pathMatch","PostDetailsComponent","canActivate","RedirectByPostIdGuard","ogTitle","PostEditComponent","PostNotFoundComponent","PostNotAllowedComponent","FeedRoutingModule","RouterModule","FeedModule","CommonModule","PostModule","NgxPaginationModule","MatButtonModule","MatIconModule","MatMenuModule","MatSelectModule","TranslateModule","SpinnerModule","FormsModule","MzimaUiModule","SortByFieldModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./node_modules/desandro-matches-selector/matches-selector.js","./node_modules/ev-emitter/ev-emitter.js","./node_modules/fizzy-ui-utils/utils.js","./node_modules/get-size/get-size.js","./node_modules/masonry-layout/masonry.js","./node_modules/outlayer/item.js","./node_modules/outlayer/outlayer.js","./node_modules/ngx-masonry/fesm2020/ngx-masonry.mjs","./apps/web-mzima-client/src/app/feed/feed.component.html","./apps/web-mzima-client/src/app/feed/feed.component.ts","./apps/web-mzima-client/src/app/feed/feed-routing.module.ts","./apps/web-mzima-client/src/app/feed/feed.module.ts"],"sourcesContent":["/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n","/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n","/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n","import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, forwardRef, Directive, NgModule } from '@angular/core';\nimport Masonry from 'masonry-layout';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\n\nclass NgxMasonryComponent {\n    constructor(platformId, _element) {\n        this.platformId = platformId;\n        this._element = _element;\n        this.updateLayout = false;\n        this.ordered = false;\n        // Outputs\n        this.layoutComplete = new EventEmitter();\n        this.removeComplete = new EventEmitter();\n        this.itemsLoaded = new EventEmitter();\n        this.pendingItems = [];\n    }\n    ngOnInit() {\n        // Create masonry options object\n        if (!this.options) {\n            this.options = {};\n        }\n        // Set default itemSelector\n        if (!this.options.itemSelector) {\n            this.options.itemSelector = '[ngxMasonryItem], ngxMasonryItem';\n        }\n        this.options['transitionDuration'] = '0s';\n        if (isPlatformBrowser(this.platformId)) {\n            // Initialize Masonry\n            this.masonryInstance = new Masonry(this._element.nativeElement, this.options);\n            // Bind to events\n            this.masonryInstance.on('layoutComplete', (items) => {\n                this.layoutComplete.emit(items);\n            });\n            this.masonryInstance.on('removeComplete', (items) => {\n                this.removeComplete.emit(items);\n            });\n            this.masonryInstance.items = [];\n        }\n    }\n    ngOnChanges(changes) {\n        // only update layout if it's not the first change\n        if (changes.updateLayout) {\n            if (!changes.updateLayout.firstChange) {\n                this.layout();\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.masonryInstance) {\n            this.masonryInstance.destroy();\n        }\n    }\n    layout() {\n        setTimeout(() => {\n            this.masonryInstance.layout();\n        });\n    }\n    reloadItems() {\n        setTimeout(() => {\n            this.masonryInstance.reloadItems();\n        });\n    }\n    addPendingItem(item) {\n        this.pendingItems.push(item);\n    }\n    add(newItem) {\n        if (this.ordered) {\n            for (const [index, item] of this.pendingItems.entries()) {\n                if (item) {\n                    if (item.images && item.images.size === 0) {\n                        this.pendingItems[index] = undefined;\n                        this.itemLoaded(item);\n                        if (index + 1 === this.pendingItems.length) {\n                            // All items are loaded\n                            this.itemsLoaded.emit(this.pendingItems.length);\n                            this.pendingItems = [];\n                        }\n                    }\n                    else {\n                        return;\n                    }\n                }\n            }\n        }\n        else {\n            this.itemLoaded(newItem);\n        }\n    }\n    itemLoaded(item) {\n        if (isPlatformBrowser(this.platformId)) {\n            // Tell Masonry that a child element has been added\n            if (item.prepend) {\n                this.masonryInstance.prepended(item.element.nativeElement);\n            }\n            else {\n                this.masonryInstance.appended(item.element.nativeElement);\n            }\n            // Check if first item\n            if (this.masonryInstance.items.length === 1) {\n                this.masonryInstance.layout();\n            }\n            item.playAnimation(true);\n        }\n    }\n    remove(element) {\n        if (isPlatformBrowser(this.platformId)) {\n            // Tell Masonry that a child element has been removed\n            this.masonryInstance.remove(element);\n            // Layout items\n            this.layout();\n        }\n    }\n}\nNgxMasonryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryComponent, deps: [{ token: PLATFORM_ID }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxMasonryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.7\", type: NgxMasonryComponent, selector: \"[ngx-masonry], ngx-masonry\", inputs: { options: \"options\", updateLayout: \"updateLayout\", ordered: \"ordered\" }, outputs: { layoutComplete: \"layoutComplete\", removeComplete: \"removeComplete\", itemsLoaded: \"itemsLoaded\" }, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\":host{display:block}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[ngx-masonry], ngx-masonry', template: '<ng-content></ng-content>', styles: [\":host{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { options: [{\n                type: Input\n            }], updateLayout: [{\n                type: Input\n            }], ordered: [{\n                type: Input\n            }], layoutComplete: [{\n                type: Output\n            }], removeComplete: [{\n                type: Output\n            }], itemsLoaded: [{\n                type: Output\n            }] } });\n\nclass NgxMasonryDirective {\n    constructor(element, builder, parent, renderer) {\n        this.element = element;\n        this.builder = builder;\n        this.parent = parent;\n        this.renderer = renderer;\n        this.prepend = false;\n        this.animations = {\n            show: [\n                style({ opacity: 0 }),\n                animate('400ms ease-in', style({ opacity: 1 })),\n            ],\n            hide: [\n                style({ opacity: '*' }),\n                animate('400ms ease-in', style({ opacity: 0 })),\n            ]\n        };\n    }\n    ngOnInit() {\n        if (this.parent.options.animations !== undefined) {\n            this.animations = this.parent.options.animations;\n        }\n        this.renderer.setStyle(this.element.nativeElement, 'position', 'fixed');\n        this.renderer.setStyle(this.element.nativeElement, 'right', '-150vw');\n        this.parent.addPendingItem(this);\n    }\n    ngAfterViewInit() {\n        const images = Array.from(this.element.nativeElement.getElementsByTagName('img'));\n        this.images = new Set(images);\n        if (images.length === 0) {\n            setTimeout(() => {\n                this.parent.add(this);\n            });\n        }\n        else {\n            for (const imageRef of images) {\n                // skip image render check if image has `masonryLazy` attribute\n                if (imageRef.hasAttribute('masonryLazy')) {\n                    this.imageLoaded(imageRef);\n                }\n                else {\n                    this.renderer.listen(imageRef, 'load', _ => {\n                        this.imageLoaded(imageRef);\n                    });\n                    this.renderer.listen(imageRef, 'error', _ => {\n                        this.imageLoaded(imageRef);\n                    });\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.images && this.images.size === 0 && this.element.nativeElement.parentNode) {\n            this.playAnimation(false);\n            this.parent.remove(this.element.nativeElement);\n        }\n    }\n    imageLoaded(image) {\n        this.images.delete(image);\n        if (this.images.size === 0) {\n            this.parent.add(this);\n        }\n    }\n    playAnimation(show) {\n        const metadata = show ? this.animations.show : this.animations.hide;\n        if (metadata) {\n            const player = this.builder.build(metadata).create(this.element.nativeElement);\n            player.play();\n        }\n    }\n}\nNgxMasonryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryDirective, deps: [{ token: i0.ElementRef }, { token: i1.AnimationBuilder }, { token: forwardRef(() => NgxMasonryComponent) }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nNgxMasonryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.7\", type: NgxMasonryDirective, selector: \"[ngxMasonryItem], ngxMasonryItem\", inputs: { prepend: \"prepend\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxMasonryItem], ngxMasonryItem'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.AnimationBuilder }, { type: NgxMasonryComponent, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgxMasonryComponent)]\n                }] }, { type: i0.Renderer2 }]; }, propDecorators: { prepend: [{\n                type: Input\n            }] } });\n\nclass NgxMasonryModule {\n}\nNgxMasonryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMasonryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryModule, declarations: [NgxMasonryComponent, NgxMasonryDirective], exports: [NgxMasonryComponent, NgxMasonryDirective] });\nNgxMasonryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NgxMasonryModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [NgxMasonryComponent, NgxMasonryDirective],\n                    exports: [NgxMasonryComponent, NgxMasonryDirective]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-masonry\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxMasonryComponent, NgxMasonryDirective, NgxMasonryModule };\n","<!-- ID mode notes [for when there are no posts at all or if there are no posts that match filters]: \n    When there are no posts in ID mode,\n    Page (css) style just adopts that of PREVIEW mode\n-->\n<div\n  class=\"feed-page\"\n  [ngClass]=\"{\n    'feed-page--filters-visible': isFiltersVisible,\n    'feed-page--no-offset': !isMainFiltersOpen\n  }\"\n>\n  <!-- This entire switch Mode area should always show up -->\n  <ng-container>\n    <div class=\"feed-page__info-panel\" *ngIf=\"isDesktop\">\n      <span\n        class=\"feed-page__results-info\"\n        [ngClass]=\"{ 'feed-page__results-info__dim': !posts.length }\"\n        [attr.data-qa]=\"'feed-page-results'\"\n      >\n        <ng-container *ngIf=\"!posts.length && isLoading\"\n          >Loading posts in {{ mode }} mode...</ng-container\n        >\n        <ng-container *ngIf=\"posts.length || (!posts.length && !isLoading)\">\n          {{ 'app.current_results' | translate }}\n          {{ postCurrentLength }}\n        </ng-container>\n        <ng-container *ngIf=\"posts.length\"> / {{ total }} </ng-container>\n      </span>\n      <div class=\"feed-page__mode-switcher\">\n        <mzima-client-button\n          [fill]=\"mode === FeedMode.Preview ? 'outline' : 'solid'\"\n          [iconOnly]=\"true\"\n          id=\"switcher-button-tiles\"\n          [color]=\"mode === FeedMode.Preview ? 'primary' : 'light'\"\n          [isActive]=\"mode === FeedMode.Preview\"\n          (buttonClick)=\"switchMode('PREVIEW')\"\n          [disabled]=\"isLoading || !posts.length\"\n          class=\"feed-page__mode-switcher__button\"\n        >\n          <mat-icon icon svgIcon=\"tiles\"></mat-icon>\n        </mzima-client-button>\n        <mzima-client-button\n          [fill]=\"mode === FeedMode.Id ? 'outline' : 'solid'\"\n          [iconOnly]=\"true\"\n          id=\"switcher-button-post\"\n          [color]=\"mode === FeedMode.Id ? 'primary' : 'light'\"\n          [isActive]=\"mode === FeedMode.Id\"\n          (buttonClick)=\"switchMode('ID')\"\n          [disabled]=\"isLoading || !posts.length\"\n          class=\"feed-page__mode-switcher__button\"\n        >\n          <mat-icon icon svgIcon=\"sidebar\"></mat-icon>\n        </mzima-client-button>\n      </div>\n    </div>\n    <div\n      class=\"feed-page__controls-panel\"\n      [ngClass]=\"{ 'feed-page__controls-panel--bulk-visible': isBulkOptionsVisible }\"\n    >\n      <div\n        class=\"feed-page__controls feed-page__controls--actions\"\n        *ngIf=\"isDesktop || isBulkOptionsVisible\"\n      >\n        <ng-container *ngIf=\"isBulkOptionsVisible\">\n          <mzima-client-button\n            color=\"danger\"\n            [iconOnly]=\"!isDesktop\"\n            class=\"feed-page__control\"\n            [disabled]=\"!selectedPosts.length\"\n            (buttonClick)=\"deleteSelectedPosts()\"\n          >\n            <span *ngIf=\"isDesktop\">{{ 'app.delete' | translate }}</span>\n            <mat-icon icon *ngIf=\"!isDesktop\" svgIcon=\"delete\"></mat-icon>\n          </mzima-client-button>\n          <ng-container *ngIf=\"!isDesktop\">\n            <span class=\"feed-page__controls__info\">\n              {{ selectedPosts.length }}/{{ posts.length }} Selected\n            </span>\n            <ng-container *ngIf=\"isManagePosts\">\n              <mzima-client-button\n                [iconOnly]=\"true\"\n                color=\"light-gray\"\n                class=\"feed-page__control\"\n                [disabled]=\"!selectedPosts.length\"\n                [matMenuTriggerFor]=\"selectedPosts.length ? statusesMenu : null\"\n              >\n                <mat-icon icon svgIcon=\"dots\"></mat-icon>\n              </mzima-client-button>\n\n              <mat-menu\n                #statusesMenu=\"matMenu\"\n                xPosition=\"after\"\n                class=\"statuses-menu\"\n                backdropClass=\"statuses-menu__backdrop\"\n              >\n                <h3 class=\"menu-title\">{{ 'app.mark_as' | translate }}</h3>\n                <button\n                  mat-menu-item\n                  *ngFor=\"let status of statuses\"\n                  (click)=\"changePostsStatus(status.value)\"\n                >\n                  {{ status.name | translate }}\n                </button>\n              </mat-menu>\n            </ng-container>\n          </ng-container>\n          <ng-container *ngIf=\"isDesktop\">\n            <mat-form-field *ngIf=\"isManagePosts\" appearance=\"outline\" class=\"feed-page__control\">\n              <mat-select\n                disableOptionCentering\n                [formControl]=\"statusControl\"\n                [disabled]=\"!selectedPosts.length\"\n                [placeholder]=\"'app.mark_as' | translate\"\n                (selectionChange)=\"changePostsStatus($event.value)\"\n              >\n                <mat-option\n                  *ngFor=\"let status of statuses\"\n                  [value]=\"status.value\"\n                  [id]=\"'select-option-' + status.value\"\n                >\n                  {{ status.name | translate }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mzima-client-button\n              fill=\"clear\"\n              color=\"gray\"\n              class=\"feed-page__control\"\n              (buttonClick)=\"selectAllPosts()\"\n            >\n              {{ 'post.select_all' | translate }}\n            </mzima-client-button>\n            <mzima-client-button\n              fill=\"clear\"\n              color=\"gray\"\n              class=\"feed-page__control\"\n              (buttonClick)=\"deselectAllPosts()\"\n              [disabled]=\"!selectedPosts.length\"\n            >\n              {{ 'nav.deselect' | translate }}\n              {{ 'nav.all' | translate }}\n            </mzima-client-button>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"feed-page__controls\">\n        <mzima-client-button\n          fill=\"outline\"\n          color=\"secondary\"\n          [isActive]=\"isBulkOptionsVisible\"\n          class=\"feed-page__control feed-page__control--bulk\"\n          *ngIf=\"user?.allowed_privileges?.includes('update')\"\n          (buttonClick)=\"toggleBulkOptions(!isBulkOptionsVisible)\"\n          [disabled]=\"isLoading || !posts.length\"\n        >\n          {{ 'post.modify.bulk_actions' | translate }}\n        </mzima-client-button>\n        <div class=\"feed-page__controls__inner\">\n          <mzima-client-button\n            fill=\"outline\"\n            color=\"secondary\"\n            [iconOnly]=\"!isDesktop\"\n            [matMenuTriggerFor]=\"sortingMenu\"\n            class=\"feed-page__control feed-page__control--sorting\"\n            [disabled]=\"isLoading || !posts.length\"\n          >\n            <span *ngIf=\"isDesktop\">{{ 'global_filter.sorting' | translate }}</span>\n            <mat-icon icon svgIcon=\"sorting\"></mat-icon>\n          </mzima-client-button>\n\n          <mat-menu #sortingMenu=\"matMenu\" xPosition=\"before\">\n            <button\n              mat-menu-item\n              *ngFor=\"let sorting of sortingOptions\"\n              (click)=\"sortPosts(sorting.value)\"\n              [ngClass]=\"{\n                active:\n                  activeSorting.order === sorting.value.order &&\n                  activeSorting.orderby === sorting.value.orderby\n              }\"\n            >\n              <mat-icon\n                [svgIcon]=\"sorting.value.order === 'desc' ? 'sort-down' : 'sort-up'\"\n              ></mat-icon>\n              {{ sorting.orderBy | translate }} ({{ sorting.order | translate }})\n            </button>\n          </mat-menu>\n\n          <mzima-client-button\n            fill=\"outline\"\n            color=\"secondary\"\n            [iconOnly]=\"true\"\n            *ngIf=\"!isDesktop\"\n            class=\"feed-page__control\"\n            (buttonClick)=\"toggleFilters(!isFiltersVisible)\"\n          >\n            <mat-icon icon svgIcon=\"filters\"></mat-icon>\n          </mzima-client-button>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <!-- Posts content -->\n  <ng-container *ngIf=\"!isLoading\">\n    <div\n      class=\"main\"\n      [ngClass]=\"{\n        main__tiles: mode === FeedMode.Preview,\n        'main__details-or-edit': mode === FeedMode.Id && posts.length\n      }\"\n      [attr.data-qa]=\"'posts'\"\n    >\n      <!-- No posts -->\n      <ng-container *ngIf=\"!posts.length\">\n        <span class=\"posts-empty\">{{ 'post.no_posts_yet' | translate }}</span>\n      </ng-container>\n      <!-- When there are posts -->\n      <ng-container *ngIf=\"posts.length\">\n        <div\n          #feed\n          [ngClass]=\"{\n            'post-list post-list__scroll post-list__color': mode === FeedMode.Id\n          }\"\n        >\n          <div [ngClass]=\"{ 'left-margin': mode === FeedMode.Id && isDesktop }\">\n            <ngx-masonry\n              #masonry\n              class=\"masonry-wrapper\"\n              [ordered]=\"true\"\n              [options]=\"masonryOptions\"\n              [attr.data-qa]=\"'post-preview'\"\n            >\n              <app-post-preview\n                [attr.data-qa]=\"'post-item'\"\n                class=\"post\"\n                [ngClass]=\"{\n                  post__tiles: mode === FeedMode.Preview,\n                  'post__details-or-edit': mode === FeedMode.Id,\n                  'active--postcard': mode === FeedMode.Id && post.id === postDetails?.id,\n                  'scroll--active--postcard--to--top':\n                    isDesktop && scrollToView && mode === FeedMode.Id && post.id === postDetails?.id\n                }\"\n                [post]=\"post\"\n                [attr.postId]=\"post.id\"\n                [user]=\"user\"\n                ngxMasonryItem\n                [feedView]=\"true\"\n                (edit)=\"editPost(post)\"\n                (refresh)=\"refreshPost(post)\"\n                (deleted)=\"postDeleted([post])\"\n                (click)=\"showPostDetails(post)\"\n                [selectable]=\"isBulkOptionsVisible\"\n                [isChecked]=\"isPostChecked(post)\"\n                (statusChanged)=\"postStatusChanged()\"\n                (selected)=\"isPostSelected($event, post)\"\n                (mediaLoaded)=\"updateMasonry()\"\n                *ngFor=\"\n                  let post of posts\n                    | paginate\n                      : {\n                          itemsPerPage: mode === FeedMode.Id ? 0 : itemsPerPage,\n                          currentPage: currentPage,\n                          totalItems: total\n                        }\n                \"\n              >\n              </app-post-preview>\n            </ngx-masonry>\n            <!-- pagination -->\n            <pagination-controls\n              class=\"pagination\"\n              (pageChange)=\"changePage($event)\"\n              *ngIf=\"!(mode === FeedMode.Id && isDesktop) && paginationElementsAllowed\"\n            >\n            </pagination-controls>\n            <!-- Load more posts -->\n            <ng-container *ngIf=\"mode === FeedMode.Id && isDesktop && paginationElementsAllowed\">\n              <mzima-client-button\n                fill=\"clear\"\n                color=\"secondary\"\n                (buttonClick)=\"loadMore()\"\n                class=\"load-more\"\n                *ngIf=\"!loadingMorePosts && postCurrentLength < total\"\n              >\n                <mat-icon iconPrefix svgIcon=\"refresh\"></mat-icon>\n                <span>{{ 'app.load_more' | translate }}</span>\n              </mzima-client-button>\n              <app-spinner *ngIf=\"loadingMorePosts && postCurrentLength < total\"></app-spinner>\n              <div class=\"endofPosts\" *ngIf=\"!loadingMorePosts && postCurrentLength >= total\">\n                End of Posts\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        <div\n          [ngClass]=\"{\n            'post-list__scroll': mode === FeedMode.Id\n          }\"\n        >\n          <!-- Router outlet here is only for Desktop, the modal popup for small devices is in .ts file -->\n          <router-outlet *ngIf=\"isDesktop && mode === FeedMode.Id\"></router-outlet>\n        </div>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <!-- Loader -->\n  <ng-container *ngIf=\"isLoading\">\n    <div\n      class=\"main main--loader\"\n      [ngClass]=\"{\n        main__tiles: mode === FeedMode.Preview,\n        'main__details-or-edit': mode === FeedMode.Id\n      }\"\n    >\n      <div\n        *ngIf=\"mode === FeedMode.Id && isDesktop\"\n        [ngClass]=\"{ 'loader loader--border': mode === FeedMode.Id && isDesktop }\"\n      >\n        <div *ngFor=\"let single of postsSkeleton\" class=\"loader--border loader--skeleton\"></div>\n      </div>\n      <div [ngClass]=\"{ 'loader--border': mode === FeedMode.Id && isDesktop }\">\n        <app-spinner class=\"loader--spinner\"></app-spinner>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Params, Router, NavigationEnd } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Permissions } from '@enums';\nimport { searchFormHelper } from '@helpers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { NgxMasonryComponent, NgxMasonryOptions } from 'ngx-masonry';\nimport { filter, forkJoin, Subject, Subscription } from 'rxjs';\nimport { PostDetailsModalComponent } from '../map';\nimport { MainViewComponent } from '@shared';\nimport { SessionService, BreakpointService, EventBusService, EventType } from '@services';\nimport { ConfirmModalService } from '../core/services/confirm-modal.service';\nimport { LanguageService } from '../core/services/language.service';\nimport {\n  SavedsearchesService,\n  PostsService,\n  GeoJsonFilter,\n  PostResult,\n  PostStatus,\n  postHelpers,\n} from '@mzima-client/sdk';\nimport _ from 'lodash';\n\nenum FeedMode {\n  Preview = 'PREVIEW',\n  Id = 'ID',\n}\n\ntype UserEvent = 'load' | 'click' | 'resize';\ntype IdModePage = 'view' | 'edit' | 'not-found' | 'not-allowed';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss'],\n})\nexport class FeedComponent extends MainViewComponent implements OnInit, OnDestroy {\n  private _routerEvent = Subscription.EMPTY;\n  @ViewChild('feed') public feed: ElementRef;\n  @ViewChild('masonry') public masonry: NgxMasonryComponent;\n  private readonly getPostsSubject = new Subject<{\n    params: GeoJsonFilter;\n    add?: boolean;\n  }>();\n  public pagination = {\n    page: 0,\n    limit: 20,\n  };\n  public userEvent: UserEvent = 'load'; // will help the app keep track of if click has happened later on\n  public idModePages: ['view', 'edit', 'not-found', 'not-allowed'] = [\n    'view',\n    'edit',\n    'not-found',\n    'not-allowed',\n  ];\n  public idModePageFromRouter = (routerUrl: string) =>\n    this.idModePages.filter((string) => routerUrl.includes(`/${string}`))[0] as IdModePage; // will help app keep track of id mode page for use later on resize, after setting on page load\n  public onlyModeUIChanged = false;\n  public postsSkeleton = new Array(20).fill(''); // used for Id mode's skeleton loader\n  public posts: PostResult[] = [];\n  public postCurrentLength = 0;\n  public isLoading: boolean;\n  public atLeastOnePostExists: boolean;\n  public noPostsYet: boolean = false;\n  public loadingMorePosts: boolean;\n  public paginationElementsAllowed: boolean = false;\n  public mode: FeedMode = FeedMode.Preview;\n  public activePostId: number;\n  public total: number;\n  public postDetails?: PostResult;\n  public scrollToView: boolean;\n  public isPostLoading: boolean;\n  public isFiltersVisible: boolean;\n  public isBulkOptionsVisible: boolean;\n  public selectedPosts: PostResult[] = [];\n  public statuses = searchFormHelper.statuses;\n  public sortingOptions = searchFormHelper.sortingOptions;\n  public activeSorting = {\n    order: 'desc',\n    orderby: 'created',\n  };\n  private isRTL?: boolean;\n  public masonryOptions: NgxMasonryOptions = {\n    originLeft: false,\n    percentPosition: true,\n    resize: true,\n    gutter: 0,\n    columnWidth: 3,\n    fitWidth: false,\n    horizontalOrder: true,\n  };\n  FeedMode = FeedMode;\n  public currentPage = 1;\n  public itemsPerPage = 20;\n  private postDetailsModal: MatDialogRef<PostDetailsModalComponent>;\n  public isMainFiltersOpen: boolean;\n  public isManagePosts: boolean;\n  public statusControl = new FormControl();\n  public initialLoad = true;\n  public urlFromRouteTrigger: string;\n  public urlAfterInteractionWithFilters: string;\n\n  constructor(\n    protected override router: Router,\n    protected override route: ActivatedRoute,\n    protected override postsService: PostsService,\n    protected override savedSearchesService: SavedsearchesService,\n    protected override eventBusService: EventBusService,\n    protected override sessionService: SessionService,\n    protected override breakpointService: BreakpointService,\n    private location: Location,\n    private confirmModalService: ConfirmModalService,\n    private dialog: MatDialog,\n    private translate: TranslateService,\n    private languageService: LanguageService,\n    private snackBar: MatSnackBar,\n  ) {\n    super(\n      router,\n      route,\n      postsService,\n      savedSearchesService,\n      eventBusService,\n      sessionService,\n      breakpointService,\n    );\n\n    this.checkDesktop();\n    this.setupFeedDefaultFilters();\n\n    this.route.params.subscribe(() => {\n      this.initCollection();\n    });\n\n    this.route.queryParams.subscribe({\n      next: (params: Params) => {\n        /* ------------------------------------------------------\n          Don't have access to the \"NavigationStart\" event within\n          FeedComponent, therefore setting initial variables here \n          -----------------------------------------------------*/\n        /* ------------------------------------------------------\n          ID check to determine mode (more reliable than previous \n          method of setting & getting mode from queryParams)\n         ------------------------------------------------------*/\n        this.activePostId = Number(this.router.url.match(/\\/(\\d+)\\/[^\\/]+$/)?.[1]);\n        const postModeHint = this.activePostId;\n        this.mode = postModeHint ? FeedMode.Id : FeedMode.Preview;\n        //----------------------------------------------\n\n        this.activeCard.scrollCountHandler({ task: 'reset' });\n\n        this.isLoading = !this.onlyModeUIChanged;\n        this.paginationElementsAllowed = this.onlyModeUIChanged\n          ? this.posts.length >= 20 || this.currentPage > 1\n          : !this.posts;\n\n        this.currentPage = params['page'] ? Number(params['page']) : 1;\n        this.params.page = this.currentPage;\n\n        //-----------------------------------\n        this.savePageURL.onRouterTriggered({ url: this.router.url });\n        //-----------------------------------\n\n        /* ---------------------------------------------------\n          Change mode params in browser URL if user tries some\n          other options apart from the mode options we provide,\n          and without causing page reload or double posts load\n        -----------------------------------------------------*/\n        if (params['mode'] && params['mode'] !== this.mode) {\n          const pageURL = this.router\n            .createUrlTree([], {\n              relativeTo: this.route,\n              queryParams: { ...params, mode: this.mode },\n            })\n            .toString();\n          //-----------------------------------\n          this.savePageURL.onRouterTriggered({ url: pageURL });\n          //-----------------------------------\n          this.location.go(pageURL);\n        }\n\n        /* -------------------------------------------------------------------\n          i.e will NOT empty posts for Post Card and SwitchMode button clicks\n        ---------------------------------------------------------------------*/\n        if (this.isLoading) {\n          this.posts = [];\n          this.getPosts({ params: this.params });\n        }\n\n        /* -------------------------------------------------------------------\n          On using the \"switch mode\" button to navigate to PREVIEW MODE:\n          this restores PREVIEW MODE posts to what it was before,\n          if the \"load more\" button has been used to add more posts in the ID MODE\n        ------------------------------------------------------------------- */\n        if (this.mode === FeedMode.Preview && this.onlyModeUIChanged && this.posts.length > 20) {\n          this.posts = this.posts.slice(0, 20);\n          this.postCurrentLength = this.posts.length * this.currentPage;\n        }\n      },\n    });\n\n    this._routerEvent = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((/*event*/) => {\n        /* ----------------------------------------------\n          Reset saved filters URL for when page loads (or \n          page buttons that also) trigger router.navigate\n        -----------------------------------------------*/\n        this.urlAfterInteractionWithFilters = '';\n        //-----------------------------------\n\n        this.activeCard.scrollCountHandler({ task: 'increment' });\n\n        this.masonryUpdateOnModeSwitch({ userEvent: this.userEvent });\n\n        this.activeCard.slideOutHandler();\n        this.activeCard.scrollToView();\n\n        if (this.mode === FeedMode.Preview) {\n          //----------------------------------\n          localStorage.removeItem('feedview_postObj');\n          //----------------------------------\n        }\n        if (this.mode === FeedMode.Id) {\n          // Note: Without this event check, clicking on card will also trigger the modal for load - we want to block that from happening\n          if (this.userEvent === 'load') {\n            //----------------------------------\n            localStorage.setItem('feedview_postObj', JSON.stringify({}));\n            //----------------------------------\n            const valueFromPageURL = this.idModePageFromRouter(this.router.url);\n            this.modal({ showOn: 'TabletAndBelow' })\n              .idMode({ page: valueFromPageURL })\n              .loadHandler({ id: this.activePostId });\n          }\n        }\n        this.onlyModeUIChanged = false;\n      });\n\n    this.postsService.postsFilters$.pipe(untilDestroyed(this)).subscribe({\n      next: () => {\n        this.isLoading = true; // Also set is loading to true before filter-related operation\n        this.paginationElementsAllowed = false;\n        if (this.isLoading) {\n          if (this.initialLoad) {\n            this.initialLoad = false;\n            return;\n          }\n\n          const currentPageBeforeInteractingWithFilters = this.currentPage; // set this before the value of this.currentPage is changed\n          //-----------------------------------\n          this.currentPage = 1; // Very important! - set current page to 1 every time we are accessing filters (and also use it to access posts once filters or clear filters is triggered)\n          //-----------------------------------\n          this.urlAfterInteractionWithFilters = this.setPageURLonInteractionWithFilters({\n            routerURL: this.urlFromRouteTrigger,\n            currentPageBeforeInteractingWithFilters,\n          });\n          //-----------------------------------\n          this.savePageURL.onInteractionWithFilters({ url: this.urlAfterInteractionWithFilters });\n          //-----------------------------------\n          this.location.go(this.urlAfterInteractionWithFilters);\n          //-----------------------------------\n\n          this.posts = [];\n          const params = { ...this.params, page: this.currentPage };\n          this.getPosts({ params });\n        }\n      },\n    });\n\n    /* ---------------------------------------------\n      Set isLoading to false at the end of API call,\n      monitored directly from posts service\n    ----------------------------------------------*/\n    this.postsService.isLoadingPosts$.pipe(untilDestroyed(this)).subscribe({\n      next: (isLoading: boolean) => {\n        // Get end of post load directly from the posts API, use it to set is loading state to false\n        this.isLoading = isLoading;\n      },\n    });\n\n    this.postsService.totalPosts$.pipe(untilDestroyed(this)).subscribe({\n      next: (total) => {\n        this.total = total;\n      },\n    });\n\n    /* -----------------------------------------------------------------\n      Centralized awaited response from API, loads after posts as needed\n    ------------------------------------------------------------------*/\n    this.postsService.awaitedResponse$.pipe(untilDestroyed(this)).subscribe({\n      next: (response: any) => {\n        const dataMetaPerPage = Number(response.meta.per_page);\n        this.postCurrentLength =\n          response.count < dataMetaPerPage\n            ? response.meta.total\n            : response.meta.current_page * response.count;\n\n        this.navigateToFirstPostOnPageOneWhenFilteringInIdMode();\n\n        /* -------------------------------------------------------------\n          Delay pagination by a \"split second\" to prevent slight flicker\n        ---------------------------------------------------------------*/\n        setTimeout(() => {\n          this.paginationElementsAllowed = response.meta.total > dataMetaPerPage; // show pagination-related elements\n          this.loadingMorePosts = false;\n        }, 1200);\n\n        this.activeCard.scrollToView();\n      },\n    });\n\n    this.sessionService.isFiltersVisible$.pipe(untilDestroyed(this)).subscribe({\n      next: (isFiltersVisible) => {\n        setTimeout(() => {\n          this.isFiltersVisible = isFiltersVisible;\n        }, 1);\n      },\n    });\n\n    this.languageService.isRTL$.pipe(untilDestroyed(this)).subscribe({\n      next: (isRTL) => {\n        if (this.isRTL !== isRTL) {\n          this.isRTL = isRTL;\n          this.masonryOptions.originLeft = !this.isRTL;\n        }\n      },\n    });\n\n    window.addEventListener('resize', () => {\n      this.activeCard.scrollCountHandler({ task: 'startCount' });\n      this.masonryUpdateOnModeSwitch({ userEvent: 'resize' });\n      //-----------------------------------\n      const valueFromPageURL = this.idModePageFromRouter(this.router.url);\n      this.modal({ showOn: 'TabletAndBelow' }).idMode({ page: valueFromPageURL }).resizeHandler({});\n      //-----------------------------------\n      this.activeCard.scrollToView();\n    });\n\n    this.sessionService.isMainFiltersHidden$.pipe(untilDestroyed(this)).subscribe({\n      next: (isMainFiltersHidden: boolean) => {\n        setTimeout(() => {\n          this.isMainFiltersOpen = !isMainFiltersHidden;\n        }, 1);\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._routerEvent.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.getUserData();\n    this.checkPermission();\n    this.eventBusListeners();\n  }\n\n  private setupFeedDefaultFilters() {\n    if (this.params.include_unstructured_posts) this.params['form[]']?.push('0');\n    this.params.currentView = 'feed';\n    (this.params.limit = 20),\n      (this.params.page = 1),\n      (this.pagination = {\n        limit: this.params.limit,\n        page: this.params.page,\n      });\n  }\n\n  private eventBusListeners() {\n    this.eventBusService\n      .on(EventType.DeleteCollection)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (colId) => {\n          if (Number(colId) === Number(this.collectionId)) {\n            this.router.navigate(['/feed']);\n          }\n        },\n      });\n\n    this.eventBusService\n      .on(EventType.DeleteSavedSearch)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: () => {\n          // We can delete search only from edit so redirect anyway\n          this.router.navigate(['/feed']);\n        },\n      });\n\n    this.eventBusService\n      .on(EventType.UpdatedPost)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (post) => {\n          this.refreshPost(post);\n        },\n      });\n\n    this.eventBusService\n      .on(EventType.EditPost)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (post) => {\n          this.editPost(post);\n        },\n      });\n\n    this.eventBusService\n      .on(EventType.DeletedPost)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (post) => {\n          this.postDeleted([post], 0);\n        },\n      });\n  }\n\n  private checkPermission() {\n    this.isManagePosts = this.user.permissions?.includes(Permissions.ManagePosts) ?? false;\n  }\n\n  loadData(): void {}\n\n  private getPosts({ params, loadMore }: { params: any; loadMore?: boolean }): void {\n    /* --------------------------------------------\n      Work with Posts Service to get posts from API\n    ----------------------------------------------*/\n    this.postsService.getPosts('', { ...params, ...this.activeSorting }).subscribe({\n      next: (data) => {\n        this.posts = loadMore ? [...this.posts, ...data.results] : data.results;\n      },\n      // complete: () => {\n      //   // console.log('complete?');\n      // },\n    });\n  }\n\n  public updateMasonry(): void {\n    this.masonry?.layout();\n  }\n\n  public masonryUpdateOnModeSwitch({ userEvent }: { userEvent: UserEvent }): void {\n    /* -----------------------------------------------\n        Smooth transition of masonry layout from PREVIEW\n        mode to ID mode and vice versa\n      ------------------------------------------------*/\n    const idModeScrollCount =\n      userEvent === 'resize' ? 0 : parseInt(localStorage.getItem('scroll_count') as string) === 1;\n    const postVisibility = (post: Element, value: string) => {\n      (post as HTMLElement).style.setProperty('visibility', value);\n    };\n    document.querySelectorAll('.post').forEach((post) => {\n      if (idModeScrollCount && window.innerWidth >= 1024) {\n        postVisibility(post, 'hidden');\n        setTimeout(() => {\n          postVisibility(post, 'visible');\n        }, 70);\n      } else {\n        postVisibility(post, '');\n      }\n    });\n\n    /* -------------------------------------------\n        Never (ever) forget this \"guy\" when you need \n        styles to adjust for masonry library\n      --------------------------------------------*/\n    this.updateMasonry();\n  }\n\n  public activeCard = {\n    slideOutHandler: () => {\n      const postFromStorage = JSON.parse(localStorage.getItem('feedview_postObj') as string);\n      this.postDetails = postFromStorage;\n    },\n    scrollCountHandler: ({ task }: { task: 'reset' | 'increment' | 'startCount' }) => {\n      const countPropExists = localStorage.hasOwnProperty('scroll_count');\n      const localStorageCount = parseInt(localStorage.getItem('scroll_count') as string);\n      const startCount = this.mode === FeedMode.Id ? 1 : 0;\n      if (!countPropExists) {\n        localStorage.setItem('scroll_count', `${startCount}`);\n      } else {\n        if (task === 'reset') localStorage.removeItem('scroll_count');\n        if (task === 'increment') localStorage.setItem('scroll_count', `${localStorageCount + 1}`);\n        if (task === 'startCount') localStorage.setItem('scroll_count', `${startCount}`);\n      }\n    },\n    scrollToView: () => {\n      this.scrollToView = parseInt(localStorage.getItem('scroll_count') as string) === 1;\n      setTimeout(() => {\n        document.querySelector('.scroll--active--postcard--to--top')?.scrollIntoView();\n      }, 150);\n    },\n  };\n\n  public showPostDetails(post: PostResult): void {\n    //---------------------------\n    this.onlyModeUIChanged = true;\n    //---------------------------\n    this.userEvent = 'click';\n    this.navigateTo().idMode.view({ id: post.id });\n    this.modal({ showOn: 'TabletAndBelow' }).idMode({ page: 'view' }).clickHandler({ post });\n  }\n\n  public navigateTo = () => {\n    const feed: string = '/feed';\n    const collection: string = 'collection';\n\n    const usePageUrl = () => {\n      return {\n        // eslint-disable-next-line no-empty-pattern\n        previewMode: ({}) => {\n          return this.collectionId ? [feed, collection, this.collectionId] : [feed];\n        },\n        idMode: ({ id, page }: { id: number; page: string }) => {\n          const idModeUrl = this.collectionId\n            ? [feed, collection, this.collectionId, id, page]\n            : [feed, id, page];\n          return idModeUrl;\n        },\n      };\n    };\n\n    const useQueryParams = ({ queryParams }: { queryParams: any }) => {\n      const currentPageForFilters = 1;\n      const userHasInteractedWithFilters =\n        this.urlAfterInteractionWithFilters &&\n        this.urlAfterInteractionWithFilters.includes(`page=${currentPageForFilters}`);\n      queryParams = userHasInteractedWithFilters\n        ? { page: currentPageForFilters, ...queryParams }\n        : queryParams;\n      return queryParams;\n    };\n\n    return {\n      // eslint-disable-next-line no-empty-pattern\n      previewMode: ({}) => {\n        //---------------------------------\n        const pageURL = usePageUrl().previewMode({});\n        //---------------------------------\n        const queryParams = useQueryParams({\n          queryParams: { mode: FeedMode.Preview },\n        });\n\n        this.router.navigate(pageURL, {\n          queryParams,\n          queryParamsHandling: 'merge',\n        });\n      },\n      idMode: {\n        view: ({ id }: { id: number }) => {\n          //---------------------------------\n          const pageURL = usePageUrl().idMode({ id, page: 'view' });\n          //---------------------------------\n          const queryParams = useQueryParams({\n            queryParams: { mode: FeedMode.Id },\n          });\n\n          this.router.navigate(pageURL, {\n            queryParams,\n            queryParamsHandling: 'merge',\n          });\n        },\n        edit: ({ id }: { id: number }) => {\n          //---------------------------------\n          const pageURL = usePageUrl().idMode({ id, page: 'edit' });\n          //---------------------------------\n          const queryParams = useQueryParams({\n            queryParams: { mode: FeedMode.Id },\n          });\n\n          this.router.navigate(pageURL, {\n            queryParams,\n            queryParamsHandling: 'merge',\n          });\n        },\n        /* ------------------------------------------------\n          The '/not-found' and '/not-allowed' page of the\n          idMode is also done at router level, but through\n          the RedirectByPostIdGuard\n          -------------------------------------------------\n          We only added routing for them here for when we\n          need to trigger them with the modal.\n        -------------------------------------------------*/\n        postNotFound: ({ id }: { id: number }) => {\n          //---------------------------------\n          const pageURL = usePageUrl().idMode({ id, page: 'not-found' });\n          //---------------------------------\n          this.router.navigate(pageURL, {\n            queryParams: {\n              mode: FeedMode.Id,\n            },\n            queryParamsHandling: 'merge',\n          });\n        },\n        PostNotAllowed: ({ id }: { id: number }) => {\n          //---------------------------------\n          const pageURL = usePageUrl().idMode({ id, page: 'not-allowed' });\n          //---------------------------------\n          this.router.navigate(pageURL, {\n            queryParams: {\n              mode: FeedMode.Id,\n            },\n            queryParamsHandling: 'merge',\n          });\n        },\n      },\n      // eslint-disable-next-line no-empty-pattern\n      pathFromCurrentRoute: ({ page }: { page: any }) => {\n        // Interesting how relativeTo works well here\n        //------------------------\n        this.currentPage = page;\n        //------------------------\n        this.router.navigate([], {\n          relativeTo: this.route,\n          queryParams: {\n            page: this.currentPage,\n          },\n          queryParamsHandling: 'merge',\n        });\n      },\n    };\n  };\n\n  public savePageURL = {\n    onRouterTriggered: ({ url }: { url: string }) => {\n      this.urlFromRouteTrigger = url;\n    },\n    onInteractionWithFilters: ({ url }: { url: string }) => {\n      this.urlAfterInteractionWithFilters = url;\n    },\n  };\n\n  public setPageURLonInteractionWithFilters = ({\n    routerURL,\n    currentPageBeforeInteractingWithFilters,\n  }: {\n    routerURL: string;\n    currentPageBeforeInteractingWithFilters: number;\n  }) => {\n    if (routerURL.includes(`page=${currentPageBeforeInteractingWithFilters}`)) {\n      routerURL = routerURL.replace(\n        `page=${currentPageBeforeInteractingWithFilters}`,\n        `page=${this.currentPage}`,\n      );\n    } else {\n      const urlHasModeID = routerURL.includes(`mode=${FeedMode.Id}`);\n      const urlHasModePREVIEW = routerURL.includes(`mode=${FeedMode.Preview}`);\n\n      let params: Record<string, any> = {};\n      if (urlHasModeID || urlHasModePREVIEW) params = { mode: this.mode };\n\n      routerURL = this.router\n        .createUrlTree([], {\n          relativeTo: this.route,\n          queryParams: { ...params, page: this.currentPage },\n        })\n        .toString();\n    }\n    return routerURL;\n  };\n\n  public navigateToFirstPostOnPageOneWhenFilteringInIdMode = () => {\n    const userHasInteractedWithFilters =\n      this.urlAfterInteractionWithFilters && this.urlAfterInteractionWithFilters !== '';\n    if (userHasInteractedWithFilters) {\n      /* -----------------------------------------------------------------------\n        Similar to what we did in switch mode - use first post from API response\n      ------------------------------------------------------------------------*/\n      const firstPostOnCurrentPage = this.posts[0];\n      const valueFromPageURL = this.idModePageFromRouter(this.urlAfterInteractionWithFilters);\n      if (this.mode === FeedMode.Id) {\n        const idEndInURL = this.urlAfterInteractionWithFilters.indexOf(valueFromPageURL);\n        const firstPartOfURL = this.urlAfterInteractionWithFilters.slice(0, idEndInURL - 1);\n        const idInURL = firstPartOfURL.slice(\n          firstPartOfURL.lastIndexOf('/') + 1,\n          firstPartOfURL.length,\n        );\n\n        let pageURL = this.urlAfterInteractionWithFilters.replace(\n          `/${idInURL}/`,\n          `/${firstPostOnCurrentPage.id}/`,\n        );\n\n        const view = 'view';\n        if (valueFromPageURL !== view) pageURL = pageURL.replace(valueFromPageURL, view);\n\n        this.router.navigateByUrl(pageURL); // using navigateByUrl as location.go() does not change post details\n\n        this.modal({ showOn: 'TabletAndBelow' })\n          .idMode({ page: 'view' })\n          .clickHandler({ post: firstPostOnCurrentPage });\n      }\n    }\n  };\n\n  public toggleBulkOptions(state: boolean): void {\n    this.isBulkOptionsVisible = state;\n    if (!this.isBulkOptionsVisible) {\n      this.deselectAllPosts();\n    }\n  }\n\n  public changePostsStatus(status: string): void {\n    if (status === PostStatus.Published) {\n      const uncompletedPosts: PostResult[] = this.selectedPosts.filter(\n        (post: PostResult) => !postHelpers.isAllRequiredCompleted(post),\n      );\n\n      if (uncompletedPosts.length > 0) {\n        this.showMessage(\n          this.translate.instant('notify.post.posts_can_t_be_published', {\n            titles: uncompletedPosts.map((p) => p.title).join(', '),\n          }),\n          'error',\n          5000,\n        );\n        this.statusControl.reset();\n        return;\n      }\n    }\n\n    forkJoin(\n      this.selectedPosts.map((p: PostResult) => this.postsService.update(p.id, { status })),\n    ).subscribe({\n      complete: () => {\n        this.getPosts({ params: this.params });\n        this.statusControl.reset();\n        this.deselectAllPosts();\n      },\n    });\n  }\n\n  public selectAllPosts(): void {\n    this.posts.map((post) => {\n      if (this.selectedPosts.find((selectedPost: PostResult) => selectedPost.id === post.id))\n        return;\n      this.selectedPosts.push(post);\n    });\n  }\n\n  public deselectAllPosts(): void {\n    this.selectedPosts = [];\n  }\n\n  public async deleteSelectedPosts(): Promise<void> {\n    const confirmed = await this.confirmModalService.open({\n      title: `${this.translate.instant(\n        'app.are_you_sure_you_want_to_delete',\n      )} ${this.translate.instant('post.post_count', { count: this.selectedPosts.length })}?`,\n      description: this.translate.instant('app.action_cannot_be_undone'),\n    });\n    if (!confirmed) return;\n\n    const count = this.selectedPosts.length;\n    forkJoin(this.selectedPosts.map((p: PostResult) => this.postsService.delete(p.id))).subscribe({\n      complete: () => {\n        this.postDeleted(this.selectedPosts, count);\n      },\n    });\n  }\n\n  public postDeleted(posts: PostResult[], count?: number): void {\n    this.getPosts({ params: this.params });\n    if (this.activePostId && posts.some((p: PostResult) => p.id === this.activePostId)) {\n      if (this.collectionId) {\n        this.router.navigate(['feed', 'collection', this.collectionId]);\n      } else {\n        this.router.navigate(['feed']);\n      }\n    }\n    this.selectedPosts = [];\n    if (count) {\n      const postWord = count === 1 ? 'post' : 'posts';\n      this.confirmModalService.open({\n        title: this.translate.instant('notify.confirm_modal.deleted.success'),\n        description: `<p>${this.translate.instant(\n          'notify.confirm_modal.deleted.success_description',\n          { count: `${count} ${postWord}` },\n        )}</p>`,\n        buttonSuccess: this.translate.instant('notify.confirm_modal.deleted.success_button'),\n      });\n      this.eventBusService.next({\n        type: EventType.RefreshSurveysCounters,\n        payload: true,\n      });\n    }\n  }\n\n  public postStatusChanged(): void {\n    this.getPosts({ params: this.params });\n    this.selectedPosts = [];\n  }\n\n  public isPostSelected(isChecked: boolean, post: PostResult): void {\n    if (isChecked) {\n      this.selectedPosts.push(post);\n    } else {\n      const index = this.selectedPosts.findIndex((p: PostResult) => p.id === post.id);\n      if (index > -1) {\n        this.selectedPosts.splice(index, 1);\n      }\n    }\n  }\n\n  public isPostChecked(post: PostResult): boolean {\n    return !!this.selectedPosts.find((p: PostResult) => p.id === post.id);\n  }\n\n  public sortPosts(value: any): void {\n    this.activeSorting = value;\n    this.postsService.setSorting(this.activeSorting);\n    this.getPosts({ params: this.params });\n  }\n\n  public loadMore(): void {\n    if (this.paginationElementsAllowed) {\n      this.loadingMorePosts = true;\n      this.activeCard.scrollCountHandler({ task: 'increment' });\n      this.params.page! += 1;\n      this.getPosts({ params: this.params, loadMore: true });\n    }\n  }\n\n  public toggleFilters(value: boolean): void {\n    if (value === this.isFiltersVisible) return;\n    this.isFiltersVisible = value;\n    this.sessionService.toggleFiltersVisibility(value);\n  }\n\n  public switchMode(switchButtonValue: string): void {\n    /* --------------------------------------------------\n      If the button is active, it shouldn't work just yet\n    ----------------------------------------------------*/\n    const modeValueBeforeRouting = this.mode;\n    const inactiveSwitchModeButtonClicked = switchButtonValue !== modeValueBeforeRouting;\n\n    if (inactiveSwitchModeButtonClicked) {\n      //---------------------------\n      this.onlyModeUIChanged = true;\n      //---------------------------\n      const firstPostOnCurrentPage = this.posts[0];\n\n      /* --------------------------------------------------------------------------------\n        Just navigateTo... this.activePostId check in the constructor will do the rest...\n      ----------------------------------------------------------------------------------*/\n      switchButtonValue === FeedMode.Id\n        ? this.navigateTo().idMode.view({ id: firstPostOnCurrentPage.id })\n        : this.navigateTo().previewMode({});\n\n      /* ------------------------------------------------------------------------------------\n        Larger devices: Updates postObj in localStorage so that \"Scroll to top\" style\n        Smaller devices: Modal will also be able to access the updated/correct post on resize\n      -------------------------------------------------------------------------------------*/\n      if (switchButtonValue === FeedMode.Id) {\n        this.modal({ showOn: 'TabletAndBelow' })\n          .idMode({ page: 'view' })\n          .clickHandler({ post: firstPostOnCurrentPage });\n      }\n    }\n  }\n\n  refreshPost({ id }: PostResult) {\n    this.postsService.getById(id).subscribe((p) => {\n      const updatedPost = _.cloneDeep(p);\n      this.posts = this.posts.map((obj) => (obj.id === updatedPost.id ? updatedPost : obj));\n    });\n  }\n\n  public changePage(page: number): void {\n    this.toggleBulkOptions(false);\n    this.navigateTo().pathFromCurrentRoute({ page });\n  }\n\n  public editPost(post: any): void {\n    //---------------------------\n    this.onlyModeUIChanged = true;\n    //---------------------------\n    this.userEvent = 'click';\n    this.navigateTo().idMode.edit({ id: post.id });\n    this.modal({ showOn: 'TabletAndBelow' }).idMode({ page: 'edit' }).clickHandler({ post });\n  }\n\n  public modal({ showOn }: { showOn: 'TabletAndBelow' }) {\n    return {\n      // Note: SM_Screen means what we say is \"tablet and below\"\n      idMode: ({ page }: { page: IdModePage }) => {\n        return {\n          clickHandler: ({ post }: { post: PostResult }) => {\n            if (showOn === 'TabletAndBelow') {\n              if (page === 'view') this.openModal({ post }).forView();\n              if (page === 'edit') this.openModal({ post }).forEdit();\n            }\n          },\n          loadHandler: ({ id }: { id: number }) => {\n            if (showOn === 'TabletAndBelow') {\n              this.postsService.getById(id).subscribe({\n                next: (fetchedPost: PostResult) => {\n                  if (page === 'view') this.openModal({ post: fetchedPost }).forView();\n                  if (page === 'edit') {\n                    if (fetchedPost.allowed_privileges.includes('update')) {\n                      this.openModal({ post: fetchedPost }).forEdit();\n                    } else {\n                      this.navigateTo().idMode.PostNotAllowed({ id: fetchedPost.id });\n                    }\n                  }\n                  if (page === 'not-allowed') {\n                    this.openModal({ post: {} }).forPostNotFoundOrNotAllowed({ page });\n                  }\n                },\n                error: (err) => {\n                  if (err.status === 404) {\n                    if (page === 'not-found') {\n                      this.navigateTo().idMode.postNotFound({ id });\n                      this.openModal({ post: {} }).forPostNotFoundOrNotAllowed({ page });\n                    }\n                  }\n                },\n              });\n            }\n          },\n          // To be used inside of a window resize event listener\n          // eslint-disable-next-line no-empty-pattern\n          resizeHandler: ({}) => {\n            // Simulate card click on RESIZE\n            if (showOn === 'TabletAndBelow') {\n              if (this.mode === FeedMode.Id) {\n                if (window.innerWidth >= 1024) {\n                  this.postDetailsModal?.close();\n                  // console.log(this.dialog.openDialogs);\n                } else {\n                  if (this.dialog.openDialogs.length) {\n                    for (let i = 0; i <= this.dialog.openDialogs.length; i += 1) {\n                      if (i === 0 && this.dialog.openDialogs.length === 1) {\n                        const firstPostFromOpenModalDialog =\n                          this.dialog.openDialogs[0].componentInstance.data.post;\n                        if (page === 'view')\n                          this.openModal({ post: firstPostFromOpenModalDialog }).forView();\n                        if (page === 'edit')\n                          this.openModal({ post: firstPostFromOpenModalDialog }).forEdit();\n                        if (page === 'not-found' || page === 'not-allowed')\n                          this.openModal({ post: {} }).forPostNotFoundOrNotAllowed({ page });\n                        break;\n                      }\n                    }\n                  } else {\n                    const postFromStorage = JSON.parse(\n                      localStorage.getItem('feedview_postObj') as string,\n                    );\n                    if (page === 'view') this.openModal({ post: postFromStorage }).forView();\n                    if (page === 'edit') this.openModal({ post: postFromStorage }).forEdit();\n                    if (page === 'not-found' || page === 'not-allowed')\n                      this.openModal({ post: postFromStorage }).forPostNotFoundOrNotAllowed({\n                        page,\n                      });\n                  }\n                  // console.log(this.dialog.openDialogs);\n                }\n              }\n            }\n          },\n        };\n      },\n    };\n  }\n\n  public openModal({ post }: { post: PostResult | Record<string, any> }) {\n    const customModalDialog = ({\n      page,\n      configRemainder,\n    }: {\n      page: IdModePage;\n      configRemainder: Record<string, any>;\n    }) => {\n      let config = {\n        width: '100%',\n        maxWidth: 576,\n        height: 'auto',\n        maxHeight: '90vh',\n        panelClass: ['modal', 'post-modal'],\n      };\n\n      config.panelClass.push('resize-css-handler');\n\n      config = { ...config, ...configRemainder };\n\n      // Smaller devices only [NOTE: see CSS inside the PostDetailsModalComponent for CSS reize related fix]\n      if (!this.isDesktop) {\n        if (!this.dialog.openDialogs.length) {\n          // !this.dialog.openDialogs.length check needed to prevent more than one modals from showing up RESIZE\n          //-----------------------------------------\n          this.postDetailsModal = this.dialog.open(PostDetailsModalComponent, config);\n          //-----------------------------------------\n          if (page === 'edit') this.postDetailsModal.componentInstance.post = post;\n          if (page === 'not-found' || page === 'not-allowed')\n            this.postDetailsModal.componentInstance.post = configRemainder;\n        }\n      }\n\n      // Regardless of device size, save post result from/on card click\n      // Saving it will be useful for when we need to be able to trigger modal open/close on resize\n      post = page === 'view' || page === 'edit' ? post : {};\n      localStorage.setItem('feedview_postObj', JSON.stringify(post));\n\n      // Smaller devices only - what happens after modal is closed\n      // Note: [mat-dialog-close]=\"false\" in the html of the modal takes care of closing the modal\n      this.postDetailsModal?.afterClosed().subscribe((data) => {\n        if (!data && !this.isDesktop) {\n          // adding !isDesktop to the check prevents misbehaving and makes sure routing only takes place if current modal is closed when on smaller devices\n          if (!this.dialog.openDialogs.length) {\n            // !this.dialog.openDialogs.length check needed to allow routing to PREVIEW MODE on RESIZE\n            //----------------------------\n            this.onlyModeUIChanged = true;\n            //----------------------------\n            this.navigateTo().previewMode({});\n          }\n        }\n      });\n    };\n\n    return {\n      forView: () => {\n        const configRemainder = {\n          data: { post: post, color: post.color, twitterId: post.data_source_message_id },\n        };\n        customModalDialog({ page: 'view', configRemainder });\n      },\n      forEdit: () => {\n        const configRemainder = {\n          data: {\n            editable: true,\n            color: post.color,\n            twitterId: post.data_source_message_id,\n          },\n        };\n        customModalDialog({ page: 'edit', configRemainder });\n      },\n      forPostNotFoundOrNotAllowed: ({ page }: { page: IdModePage }) => {\n        const configRemainder = { data: { urlEnd: page } };\n        customModalDialog({ page, configRemainder });\n      },\n    };\n  }\n\n  private showMessage(message: string, type: string, duration = 3000) {\n    this.snackBar.open(message, 'Close', {\n      panelClass: [type],\n      duration,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  PostDetailsComponent,\n  PostEditComponent,\n  PostNotAllowedComponent,\n  PostNotFoundComponent,\n} from '@post';\nimport { FeedComponent } from './feed.component';\nimport { RedirectByPostIdGuard } from '../core/guards/redirect.post-id.guard';\n\n/* -------------------------------------------------------\n  RedirectByPostIdGuard added here to all child :id routes\n  And also added to the parent posts:id in the app-routing\n  module file\n--------------------------------------------------------*/\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedComponent,\n    children: [\n      //--- Prevents reload of children components where/when necessary\n      {\n        path: '',\n        redirectTo: '',\n        pathMatch: 'full',\n      },\n      //----------------------------\n      {\n        path: ':id/view',\n        component: PostDetailsComponent,\n        canActivate: [RedirectByPostIdGuard],\n        data: {\n          ogTitle: 'nav.feed',\n        },\n      },\n      {\n        path: ':id/edit',\n        component: PostEditComponent,\n        canActivate: [RedirectByPostIdGuard],\n        data: {\n          ogTitle: 'nav.feed',\n        },\n      },\n      {\n        path: ':id/not-found',\n        component: PostNotFoundComponent,\n        canActivate: [RedirectByPostIdGuard],\n        data: {\n          ogTitle: 'nav.feed',\n        },\n      },\n      {\n        path: ':id/not-allowed',\n        component: PostNotAllowedComponent,\n        canActivate: [RedirectByPostIdGuard],\n        data: {\n          ogTitle: 'nav.feed',\n        },\n      },\n    ],\n  },\n  {\n    path: 'collection',\n    redirectTo: '',\n    // canActivate: [RedirectByPostIdGuard], (i can't get collection ID through this means to use within the guard, so... commenting out)\n    children: [\n      {\n        path: ':id',\n        component: FeedComponent,\n        data: {\n          view: 'collection',\n        },\n        children: [\n          {\n            path: ':id/view',\n            component: PostDetailsComponent,\n            canActivate: [RedirectByPostIdGuard],\n            data: {\n              ogTitle: 'nav.feed',\n            },\n          },\n          {\n            path: ':id/edit',\n            component: PostEditComponent,\n            canActivate: [RedirectByPostIdGuard],\n            data: {\n              ogTitle: 'nav.feed',\n            },\n          },\n          {\n            path: ':id/not-found',\n            component: PostNotFoundComponent,\n            canActivate: [RedirectByPostIdGuard],\n            data: {\n              ogTitle: 'nav.feed',\n            },\n          },\n          {\n            path: ':id/not-allowed',\n            component: PostNotAllowedComponent,\n            canActivate: [RedirectByPostIdGuard],\n            data: {\n              ogTitle: 'nav.feed',\n            },\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'search',\n    redirectTo: '',\n    children: [\n      {\n        path: ':id',\n        component: FeedComponent,\n        data: {\n          view: 'search',\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SortByFieldModule } from '@pipes';\nimport { SpinnerModule } from '../shared/components/spinner/spinner.module';\nimport { FeedComponent } from './feed.component';\nimport { FeedRoutingModule } from './feed-routing.module';\nimport { PostModule } from '../post/post.module';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MzimaUiModule } from '@mzima-client/mzima-ui';\n\n@NgModule({\n  declarations: [FeedComponent],\n  imports: [\n    CommonModule,\n    FeedRoutingModule,\n    PostModule,\n    NgxMasonryModule,\n    NgxPaginationModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSelectModule,\n    TranslateModule,\n    SpinnerModule,\n    FormsModule,\n    MzimaUiModule,\n    SortByFieldModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class FeedModule {}\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7]}