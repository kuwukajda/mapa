{"version":3,"file":"927.0125d60ebf75d2ca.js","mappings":"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","names":["i0","RoleItemComponent","route","router","fb","rolesService","permissionsService","confirmModalService","translate","breakpointService","location","changeDetectorRef","isDesktop$","permissionsList","role","isUpdate","userRole","form","isDesktop","formErrors","isFormOnSubmit","constructor","this","pipe","untilDestroyed","subscribe","next","group","display_name","Validators","description","permissions","id","protected","ngOnInit","localStorage","getItem","generalHelpers","snapshot","paramMap","get","roleId","role$","getRoleById","permissions$","getPermissions","combineLatest","result","results","map","el","name","checked","test","replace","toLowerCase","fillInForm","permission","reduce","acc","detectChanges","error","err","console","log","setName","event","patchValue","url","navigateToRoles","navigate","back","save","roleBody","value","updateRole","errors","failed_validations","post","deleteRole","_this","open","title","instant","roleName","delete","_this2","selectedItems","selectedPermissions","includes","find","push","selectors","tslib_es6","UntilDestroy","ActivatedRoute","Router","FormBuilder","RolesService","PermissionsService","ConfirmModalService","TranslateService","BreakpointService","Location","ChangeDetectorRef","RolesComponent","roleResponse$","getRoles","routes","path","component","data","breadcrumb","RolesRoutingModule","RouterModule","RolesModule","CommonModule","TranslateModule","MatButtonModule","DirectiveModule","SpinnerModule","MatIconModule","MatRippleModule","ReactiveFormsModule","MatInputModule","MatListModule","MzimaUiModule"],"sourceRoot":"webpack:///","sources":["./apps/web-mzima-client/src/app/settings/roles/role-item/role-item.component.html","./apps/web-mzima-client/src/app/settings/roles/role-item/role-item.component.ts","./apps/web-mzima-client/src/app/settings/roles/roles.component.html","./apps/web-mzima-client/src/app/settings/roles/roles.component.ts","./apps/web-mzima-client/src/app/settings/roles/roles-routing.module.ts","./apps/web-mzima-client/src/app/settings/roles/roles.module.ts"],"sourcesContent":["<h1 *ngIf=\"isDesktop\">{{ (isUpdate ? 'role.edit_role' : 'role.add_role') | translate }}</h1>\n<form\n  class=\"form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"save()\"\n  novalidate\n  *ngIf=\"permissionsList.length; else spinner\"\n>\n  <div class=\"form-row\">\n    <mat-label>{{ 'role.name' | translate }}</mat-label>\n    <mat-form-field appearance=\"outline\">\n      <input\n        matInput\n        formControlName=\"display_name\"\n        (ngModelChange)=\"setName($event)\"\n        placeholder=\"{{ 'role.placeholder.name' | translate }}\"\n      />\n    </mat-form-field>\n    <ng-container *ngFor=\"let err of formErrors\">\n      <ng-container *ngIf=\"err?.field === 'name'\">\n        <mat-error *ngFor=\"let msg of err?.error_messages\">\n          {{ msg | translate }}\n        </mat-error>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div class=\"form-row\">\n    <mat-label>{{ 'role.description' | translate }}</mat-label>\n    <mat-form-field appearance=\"outline\">\n      <input\n        matInput\n        formControlName=\"description\"\n        placeholder=\"{{ 'role.placeholder.description' | translate }}\"\n      />\n    </mat-form-field>\n  </div>\n\n  <div class=\"form-row\">\n    <mat-label>{{ 'role.permissions' | translate }}</mat-label>\n    <p [innerHTML]=\"'settings.roles.roles_description' | translate\"></p>\n    <mat-selection-list\n      [data-qa]=\"'role-permissions-list'\"\n      formControlName=\"permissions\"\n      (ngModelChange)=\"selectedItems($event)\"\n    >\n      <mat-list-option\n        color=\"primary\"\n        class=\"list-option\"\n        checkboxPosition=\"before\"\n        *ngFor=\"let item of permissionsList\"\n        [value]=\"item.name\"\n        [selected]=\"item.checked\"\n        [disabled]=\"isUpdate ? userRole === role.name : false\"\n        [data-qa]=\"item.test\"\n      >\n        {{ item.name }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n\n  <div class=\"form-controls-spacer\" *ngIf=\"!isDesktop\"></div>\n  <div class=\"form-controls-panel form-controls-panel--sticky\">\n    <div>\n      <mzima-client-button\n        color=\"danger\"\n        class=\"delete-btn\"\n        [iconOnly]=\"!isDesktop\"\n        (buttonClick)=\"deleteRole()\"\n        [data-qa]=\"'btn-delete-role'\"\n        *ngIf=\"isUpdate && !role?.protected\"\n      >\n        <ng-container *ngIf=\"isDesktop\">{{ 'role.delete' | translate }}</ng-container>\n        <mat-icon *ngIf=\"!isDesktop\" icon svgIcon=\"delete\"></mat-icon>\n      </mzima-client-button>\n    </div>\n    <div>\n      <mzima-client-button\n        fill=\"outline\"\n        color=\"secondary\"\n        [data-qa]=\"'btn-cancel-role'\"\n        (buttonClick)=\"navigateToRoles()\"\n      >\n        {{ 'app.cancel' | translate }}\n      </mzima-client-button>\n      <mzima-client-button\n        type=\"submit\"\n        [disabled]=\"form.invalid || isFormOnSubmit\"\n        [data-qa]=\"'btn-save-role'\"\n      >\n        <ng-container *ngIf=\"isDesktop\">{{\n          (isUpdate ? 'app.update_and_close' : 'app.save_and_close') | translate\n        }}</ng-container>\n        <ng-container *ngIf=\"!isDesktop\">{{\n          (isUpdate ? 'app.update' : 'app.save') | translate\n        }}</ng-container>\n      </mzima-client-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #spinner>\n  <app-spinner class=\"spinner\"></app-spinner>\n</ng-template>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { BreakpointService } from '@services';\nimport { Location } from '@angular/common';\nimport { PermissionsService, RolesService, RoleResult, generalHelpers } from '@mzima-client/sdk';\nimport { ConfirmModalService } from '../../../core/services/confirm-modal.service';\n\nconst PERMISSIONS = {\n  EDIT_THEIR_OWN_POSTS: 'Edit Their Own Posts',\n  DELETE_THEIR_OWN_POSTS: 'Delete Their Own Posts',\n};\n\n@UntilDestroy()\n@Component({\n  selector: 'app-role-item',\n  templateUrl: './role-item.component.html',\n  styleUrls: ['./role-item.component.scss'],\n})\nexport class RoleItemComponent implements OnInit {\n  private isDesktop$: Observable<boolean>;\n  public permissionsList: any[] = [];\n  public role: RoleResult;\n  public isUpdate = false;\n  public userRole: string;\n  public form: FormGroup;\n  public isDesktop = false;\n  public formErrors: any[] = [];\n  public isFormOnSubmit = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private rolesService: RolesService,\n    private permissionsService: PermissionsService,\n    private confirmModalService: ConfirmModalService,\n    private translate: TranslateService,\n    private breakpointService: BreakpointService,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    this.isDesktop$ = this.breakpointService.isDesktop$.pipe(untilDestroyed(this));\n    this.isDesktop$.subscribe({\n      next: (isDesktop) => {\n        this.isDesktop = isDesktop;\n      },\n    });\n    this.form = this.fb.group({\n      display_name: ['', [Validators.required]],\n      description: [''],\n      permissions: [[], [Validators.required]],\n      id: [null],\n      protected: [false],\n    });\n  }\n\n  ngOnInit(): void {\n    this.userRole = localStorage.getItem(`${generalHelpers.CONST.LOCAL_STORAGE_PREFIX}role`) || '';\n    this.isUpdate = !!this.route.snapshot.paramMap.get('id');\n    const roleId = this.route.snapshot.paramMap.get('id') || '';\n    const role$ = this.rolesService.getRoleById(roleId);\n    const permissions$ = this.permissionsService.getPermissions();\n    combineLatest([role$, permissions$]).subscribe({\n      next: ([role, permissions]) => {\n        this.role = role.result;\n        this.permissionsList = permissions.results.map((el: any) => {\n          return {\n            name: el.name,\n            checked: false,\n            test: el.name.replace(' ', '-').toLowerCase(),\n          };\n        });\n        if (this.isUpdate) {\n          this.fillInForm(this.role);\n\n          for (const permission of this.role.permissions) {\n            this.permissionsList.reduce((acc, el: any) => {\n              return el.name === permission ? [...acc, (el.checked = true)] : [...acc, el];\n            }, []);\n          }\n          this.changeDetectorRef.detectChanges();\n        }\n      },\n      error: (err) => console.log(err),\n    });\n  }\n\n  setName(event: string) {\n    this.form.patchValue({ name: event.toLowerCase() });\n  }\n\n  private fillInForm(role: RoleResult) {\n    this.form.patchValue({\n      id: role.id,\n      display_name: role.display_name,\n      description: role.description,\n      protected: role.protected,\n      url: role.url,\n      permissions: role.permissions,\n    });\n    this.changeDetectorRef.detectChanges();\n  }\n\n  public navigateToRoles(): void {\n    if (this.isDesktop) {\n      this.router.navigate(['settings/roles']);\n    } else {\n      this.location.back();\n    }\n  }\n\n  public save(): void {\n    this.isFormOnSubmit = true;\n\n    const roleBody = this.form.value;\n\n    if (!this.isUpdate) {\n      delete roleBody.id;\n      roleBody.name = roleBody.display_name; // name: same value as display_name only on initial role add\n      this.rolesService.post(roleBody).subscribe({\n        next: () => this.navigateToRoles(),\n        error: ({ error }) => {\n          this.formErrors = error.errors.failed_validations;\n          this.isFormOnSubmit = false;\n        },\n      });\n    } else {\n      roleBody.name = this.role.name; // Use role name from API - We don't want to change name property along with display_name on edit/update\n      this.rolesService.updateRole(this.role.id, roleBody).subscribe({\n        next: () => this.navigateToRoles(),\n        error: ({ error }) => {\n          this.formErrors = error.errors.failed_validations;\n          this.isFormOnSubmit = false;\n        },\n      });\n    }\n  }\n\n  public async deleteRole(): Promise<void> {\n    const confirmed = await this.confirmModalService.open({\n      title: this.translate.instant('role.are_you_sure_you_want_to_delete_role', {\n        roleName: this.role.display_name,\n      }),\n      description: this.translate.instant('app.action_cannot_be_undone'),\n    });\n    if (!confirmed) return;\n    await this.delete();\n  }\n\n  public async delete() {\n    this.rolesService.deleteRole(this.role.id).subscribe({\n      next: () => this.navigateToRoles(),\n      error: (err) => console.log(err),\n    });\n  }\n\n  public selectedItems(selectedPermissions: any) {\n    if (selectedPermissions.includes(PERMISSIONS.DELETE_THEIR_OWN_POSTS)) {\n      if (!selectedPermissions.find((el: string) => el === PERMISSIONS.EDIT_THEIR_OWN_POSTS)) {\n        selectedPermissions.push(PERMISSIONS.EDIT_THEIR_OWN_POSTS);\n        this.form.patchValue({ permissions: selectedPermissions });\n      }\n    }\n  }\n}\n","<div class=\"form-head-panel\">\n  <h1 *ngIf=\"isDesktop$ | async\">{{ 'app.roles' | translate }}</h1>\n  <mzima-client-button [routerLink]=\"['create']\" [data-qa]=\"'btn-add-role'\">\n    <span>{{ 'role.add_role' | translate }}</span>\n    <mat-icon icon svgIcon=\"plus\"></mat-icon>\n  </mzima-client-button>\n</div>\n\n<div class=\"roles\">\n  <a\n    matRipple\n    class=\"role-item\"\n    *ngFor=\"let role of (roleResponse$ | async)?.results\"\n    [routerLink]=\"['update', role.id]\"\n    [data-qa]=\"'btn-' + role.display_name | lowercase\"\n  >\n    {{ role.display_name }}\n  </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RolesService, RolesResponse } from '@mzima-client/sdk';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { BreakpointService } from '@services';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss'],\n})\nexport class RolesComponent implements OnInit {\n  public isDesktop$: Observable<boolean>;\n  public roleResponse$: Observable<RolesResponse>;\n\n  constructor(private rolesService: RolesService, private breakpointService: BreakpointService) {\n    this.isDesktop$ = this.breakpointService.isDesktop$.pipe(untilDestroyed(this));\n  }\n\n  ngOnInit() {\n    this.getRoles();\n  }\n\n  private getRoles() {\n    this.roleResponse$ = this.rolesService.getRoles();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoleItemComponent } from './role-item/role-item.component';\n\nimport { RolesComponent } from './roles.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RolesComponent,\n  },\n  {\n    path: 'update/:id',\n    component: RoleItemComponent,\n    data: { breadcrumb: 'Update role' },\n  },\n  { path: 'create', component: RoleItemComponent, data: { breadcrumb: 'Create role' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RolesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DirectiveModule, SpinnerModule } from '@shared';\nimport { RoleItemComponent } from './role-item/role-item.component';\n\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { RolesComponent } from './roles.component';\nimport { MzimaUiModule } from '@mzima-client/mzima-ui';\n\n@NgModule({\n  declarations: [RolesComponent, RoleItemComponent],\n  imports: [\n    CommonModule,\n    RolesRoutingModule,\n    RouterModule,\n    TranslateModule,\n    MatButtonModule,\n    DirectiveModule,\n    SpinnerModule,\n    MatIconModule,\n    MatRippleModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatListModule,\n    MzimaUiModule,\n  ],\n})\nexport class RolesModule {}\n"],"x_google_ignoreList":[]}